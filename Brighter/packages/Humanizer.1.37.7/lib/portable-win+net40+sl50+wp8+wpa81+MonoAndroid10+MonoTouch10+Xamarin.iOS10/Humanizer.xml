<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Humanizer</name>
    </assembly>
    <members>
        <member name="T:Humanizer.Bytes.ByteRate">
            <summary>
            Class to hold a ByteSize and a measurement interval, for the purpose of calculating the rate of transfer
            </summary>
        </member>
        <member name="M:Humanizer.Bytes.ByteRate.#ctor(Humanizer.Bytes.ByteSize,System.TimeSpan)">
            <summary>
            Create a ByteRate with given quantity of bytes across an interval
            </summary>
            <param name="size"></param>
            <param name="interval"></param>
        </member>
        <member name="M:Humanizer.Bytes.ByteRate.Humanize(Humanizer.Localisation.TimeUnit)">
            <summary>
            Calculate rate for the quantity of bytes and interval defined by this instance
            </summary>
            <param name="timeUnit">Unit of time to calculate rate for (defaults is per second)</param>
            <returns></returns>
        </member>
        <member name="P:Humanizer.Bytes.ByteRate.Size">
            <summary>
            Quantity of bytes
            </summary>
            <returns></returns>
        </member>
        <member name="P:Humanizer.Bytes.ByteRate.Interval">
            <summary>
            Interval that bytes were transferred in
            </summary>
            <returns></returns>
        </member>
        <member name="T:Humanizer.CollectionHumanizeExtensions">
            <summary>
            Humanizes an IEnumerable into a human readable list
            </summary>
        </member>
        <member name="M:Humanizer.CollectionHumanizeExtensions.Humanize``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Formats the collection for display, calling ToString() on each object and
            using the default separator for the current culture.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Humanizer.CollectionHumanizeExtensions.Humanize``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String})">
            <summary>
            Formats the collection for display, calling `objectFormatter` on each object
            and using the default separator for the current culture.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Humanizer.CollectionHumanizeExtensions.Humanize``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            Formats the collection for display, calling ToString() on each object
            and using the provided separator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Humanizer.CollectionHumanizeExtensions.Humanize``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String},System.String)">
            <summary>
            Formats the collection for display, calling `objectFormatter` on each object
            and using the provided separator.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Humanizer.Configuration.LocaliserRegistry`1">
            <summary>
            A registry of localised system components with their associated locales
            </summary>
            <typeparam name="TLocaliser"></typeparam>
        </member>
        <member name="M:Humanizer.Configuration.LocaliserRegistry`1.#ctor(`0)">
            <summary>
            Creates a localiser registry with the default localiser set to the provided value
            </summary>
            <param name="defaultLocaliser"></param>
        </member>
        <member name="M:Humanizer.Configuration.LocaliserRegistry`1.#ctor(System.Func{System.Globalization.CultureInfo,`0})">
            <summary>
            Creates a localiser registry with the default localiser factory set to the provided value
            </summary>
            <param name="defaultLocaliser"></param>
        </member>
        <member name="M:Humanizer.Configuration.LocaliserRegistry`1.ResolveForUiCulture">
            <summary>
            Gets the localiser for the current thread's UI culture 
            </summary>
        </member>
        <member name="M:Humanizer.Configuration.LocaliserRegistry`1.ResolveForCulture(System.Globalization.CultureInfo)">
            <summary>
            Gets the localiser for the specified culture 
            </summary>
            <param name="culture">The culture to retrieve localiser for. If not specified, current thread's UI culture is used.</param>
        </member>
        <member name="M:Humanizer.Configuration.LocaliserRegistry`1.Register(System.String,`0)">
            <summary>
            Registers the localiser for the culture provided 
            </summary>
        </member>
        <member name="M:Humanizer.Configuration.LocaliserRegistry`1.Register(System.String,System.Func{System.Globalization.CultureInfo,`0})">
            <summary>
            Registers the localiser factory for the culture provided
            </summary>
        </member>
        <member name="T:Humanizer.DateTimeHumanizeStrategy.DateTimeHumanizeAlgorithms">
            <summary>
            Algorithms used to convert distance between two dates into words.
            </summary>
        </member>
        <member name="M:Humanizer.DateTimeHumanizeStrategy.DateTimeHumanizeAlgorithms.PrecisionHumanize(System.DateTime,System.DateTime,System.Double,System.Globalization.CultureInfo)">
            <summary>
            Returns localized &amp; humanized distance of time between two dates; given a specific precision.
            </summary>
        </member>
        <member name="M:Humanizer.DateTimeHumanizeStrategy.DateTimeHumanizeAlgorithms.DefaultHumanize(System.DateTime,System.DateTime,System.Globalization.CultureInfo)">
            <summary>
            Calculates the distance of time in words between two provided dates
            </summary>
        </member>
        <member name="T:Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy">
            <summary>
            The default 'distance of time' -> words calculator.
            </summary>
        </member>
        <member name="T:Humanizer.DateTimeHumanizeStrategy.IDateTimeHumanizeStrategy">
            <summary>
            Implement this interface to create a new strategy for DateTime.Humanize and hook it in the Configurator.DateTimeHumanizeStrategy
            </summary>
        </member>
        <member name="M:Humanizer.DateTimeHumanizeStrategy.IDateTimeHumanizeStrategy.Humanize(System.DateTime,System.DateTime,System.Globalization.CultureInfo)">
            <summary>
            Calculates the distance of time in words between two provided dates used for DateTime.Humanize
            </summary>
        </member>
        <member name="M:Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime,System.DateTime,System.Globalization.CultureInfo)">
            <summary>
            Calculates the distance of time in words between two provided dates
            </summary>
        </member>
        <member name="T:Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeOffsetHumanizeStrategy">
            <summary>
            The default 'distance of time' -> words calculator.
            </summary>
        </member>
        <member name="T:Humanizer.DateTimeHumanizeStrategy.IDateTimeOffsetHumanizeStrategy">
            <summary>
            Implement this interface to create a new strategy for DateTime.Humanize and hook it in the Configurator.DateTimeOffsetHumanizeStrategy
            </summary>
        </member>
        <member name="M:Humanizer.DateTimeHumanizeStrategy.IDateTimeOffsetHumanizeStrategy.Humanize(System.DateTimeOffset,System.DateTimeOffset,System.Globalization.CultureInfo)">
            <summary>
            Calculates the distance of time in words between two provided dates used for DateTimeOffset.Humanize
            </summary>
        </member>
        <member name="M:Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeOffsetHumanizeStrategy.Humanize(System.DateTimeOffset,System.DateTimeOffset,System.Globalization.CultureInfo)">
            <summary>
            Calculates the distance of time in words between two provided dates
            </summary>
        </member>
        <member name="T:Humanizer.DateTimeHumanizeStrategy.PrecisionDateTimeOffsetHumanizeStrategy">
            <summary>
            Precision-based calculator for distance between two times
            </summary>
        </member>
        <member name="M:Humanizer.DateTimeHumanizeStrategy.PrecisionDateTimeOffsetHumanizeStrategy.#ctor(System.Double)">
            <summary>
            Constructs a precision-based calculator for distance of time with default precision 0.75.
            </summary>
            <param name="precision">precision of approximation, if not provided  0.75 will be used as a default precision.</param>
        </member>
        <member name="M:Humanizer.DateTimeHumanizeStrategy.PrecisionDateTimeOffsetHumanizeStrategy.Humanize(System.DateTimeOffset,System.DateTimeOffset,System.Globalization.CultureInfo)">
            <summary>
            Returns localized &amp; humanized distance of time between two dates; given a specific precision.
            </summary>
        </member>
        <member name="T:Humanizer.Inflections.Vocabularies">
            <summary>
            Container for registered Vocabularies.  At present, only a single vocabulary is supported: Default.
            </summary>
        </member>
        <member name="P:Humanizer.Inflections.Vocabularies.Default">
            <summary>
            The default vocabulary used for singular/plural irregularities.
            Rules can be added to this vocabulary and will be picked up by called to Singularize() and Pluralize().
            At this time, multiple vocabularies and removing existing rules are not supported.
            </summary>
        </member>
        <member name="T:Humanizer.Inflections.Vocabulary">
            <summary>
            A container for exceptions to simple pluralization/singularization rules.
            Vocabularies.Default contains an extensive list of rules for US English.
            At this time, multiple vocabularies and removing existing rules are not supported.
            </summary>
        </member>
        <member name="M:Humanizer.Inflections.Vocabulary.AddIrregular(System.String,System.String)">
            <summary>
            Adds a word to the vocabulary which cannot easily be pluralized/singularized by RegEx, e.g. "person" and "people".
            </summary>
            <param name="singular">The singular form of the irregular word, e.g. "person".</param>
            <param name="plural">The plural form of the irregular word, e.g. "people".</param>
        </member>
        <member name="M:Humanizer.Inflections.Vocabulary.AddUncountable(System.String)">
            <summary>
            Adds an uncountable word to the vocabulary, e.g. "fish".  Will be ignored when plurality is changed.
            </summary>
            <param name="word">Word to be added to the list of uncountables.</param>
        </member>
        <member name="M:Humanizer.Inflections.Vocabulary.AddPlural(System.String,System.String)">
            <summary>
            Adds a rule to the vocabulary that does not follow trivial rules for pluralization, e.g. "bus" -> "buses"
            </summary>
            <param name="rule">RegEx to be matched, case insensitive, e.g. "(bus)es$"</param>
            <param name="replacement">RegEx replacement  e.g. "$1"</param>
        </member>
        <member name="M:Humanizer.Inflections.Vocabulary.AddSingular(System.String,System.String)">
            <summary>
            Adds a rule to the vocabulary that does not follow trivial rules for singularization, e.g. "vertices/indices -> "vertex/index"
            </summary>
            <param name="rule">RegEx to be matched, case insensitive, e.g. ""(vert|ind)ices$""</param>
            <param name="replacement">RegEx replacement  e.g. "$1ex"</param>
        </member>
        <member name="M:Humanizer.Inflections.Vocabulary.Pluralize(System.String,System.Boolean)">
            <summary>
            Pluralizes the provided input considering irregular words
            </summary>
            <param name="word">Word to be pluralized</param>
            <param name="inputIsKnownToBeSingular">Normally you call Pluralize on singular words; but if you're unsure call it with false</param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.Inflections.Vocabulary.Pluralize(System.String,Humanizer.Plurality)">
            <summary>
            Pluralizes the provided input considering irregular words
            </summary>
            <param name="word">Word to be pluralized</param>
            <param name="plurality">Normally you call Pluralize on singular words; but if you're unsure call it with Plurality.CouldBeEither</param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.Inflections.Vocabulary.Singularize(System.String,System.Boolean)">
            <summary>
            Singularizes the provided input considering irregular words
            </summary>
            <param name="word">Word to be singularized</param>
            <param name="inputIsKnownToBePlural">Normally you call Singularize on plural words; but if you're unsure call it with false</param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.Inflections.Vocabulary.Singularize(System.String,Humanizer.Plurality)">
            <summary>
            Singularizes the provided input considering irregular words
            </summary>
            <param name="word">Word to be singularized</param>
            <param name="plurality">Normally you call Singularize on plural words; but if you're unsure call it with Plurality.CouldBeEither</param>
            <returns></returns>
        </member>
        <member name="T:Humanizer.Localisation.CollectionFormatters.ICollectionFormatter">
            <summary>
            An interface you should implement to localize Humanize for collections
            </summary>
        </member>
        <member name="M:Humanizer.Localisation.CollectionFormatters.ICollectionFormatter.Humanize``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Formats the collection for display, calling ToString() on each object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Humanizer.Localisation.CollectionFormatters.ICollectionFormatter.Humanize``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String})">
            <summary>
            Formats the collection for display, calling `objectFormatter` on each object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Humanizer.Localisation.CollectionFormatters.ICollectionFormatter.Humanize``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            Formats the collection for display, calling ToString() on each object
            and using `separator` before the final item.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Humanizer.Localisation.CollectionFormatters.ICollectionFormatter.Humanize``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String},System.String)">
            <summary>
            Formats the collection for display, calling `objectFormatter` on each object
            and using `separator` before the final item.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Humanizer.Localisation.Formatters.DefaultFormatter">
            <summary>
            Default implementation of IFormatter interface.
            </summary>
        </member>
        <member name="T:Humanizer.Localisation.Formatters.IFormatter">
            <summary>
            Implement this interface if your language has complex rules around dealing with numbers. 
            For example in Romanian "5 days" is "5 zile", while "24 days" is "24 de zile" and 
            in Arabic 2 days is يومين not 2 يوم
            </summary>
        </member>
        <member name="M:Humanizer.Localisation.Formatters.IFormatter.DateHumanize_Now">
            <summary>
            Now
            </summary>
            <returns>Returns Now</returns>
        </member>
        <member name="M:Humanizer.Localisation.Formatters.IFormatter.DateHumanize(Humanizer.Localisation.TimeUnit,Humanizer.Localisation.Tense,System.Int32)">
            <summary>
            Returns the string representation of the provided DateTime
            </summary>
            <param name="timeUnit"></param>
            <param name="timeUnitTense"></param>
            <param name="unit"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.Localisation.Formatters.IFormatter.TimeSpanHumanize_Zero">
            <summary>
            0 seconds
            </summary>
            <returns>Returns 0 seconds as the string representation of Zero TimeSpan</returns>
        </member>
        <member name="M:Humanizer.Localisation.Formatters.IFormatter.TimeSpanHumanize(Humanizer.Localisation.TimeUnit,System.Int32)">
            <summary>
            Returns the string representation of the provided TimeSpan
            </summary>
            <param name="timeUnit"></param>
            <param name="unit"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.Localisation.Formatters.DefaultFormatter.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="localeCode">Name of the culture to use.</param>
        </member>
        <member name="M:Humanizer.Localisation.Formatters.DefaultFormatter.DateHumanize_Now">
            <summary>
            Now
            </summary>
            <returns>Returns Now</returns>
        </member>
        <member name="M:Humanizer.Localisation.Formatters.DefaultFormatter.DateHumanize(Humanizer.Localisation.TimeUnit,Humanizer.Localisation.Tense,System.Int32)">
            <summary>
            Returns the string representation of the provided DateTime
            </summary>
            <param name="timeUnit"></param>
            <param name="timeUnitTense"></param>
            <param name="unit"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.Localisation.Formatters.DefaultFormatter.TimeSpanHumanize_Zero">
            <summary>
            0 seconds
            </summary>
            <returns>Returns 0 seconds as the string representation of Zero TimeSpan</returns>
        </member>
        <member name="M:Humanizer.Localisation.Formatters.DefaultFormatter.TimeSpanHumanize(Humanizer.Localisation.TimeUnit,System.Int32)">
            <summary>
            Returns the string representation of the provided TimeSpan
            </summary>
            <param name="timeUnit">Must be less than or equal to TimeUnit.Week</param>
            <param name="unit"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Is thrown when timeUnit is larger than TimeUnit.Week</exception>
        </member>
        <member name="M:Humanizer.Localisation.Formatters.DefaultFormatter.Format(System.String)">
            <summary>
            
            </summary>
            <param name="resourceKey"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.Localisation.Formatters.DefaultFormatter.Format(System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="resourceKey"></param>
            <param name="number"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.Localisation.Formatters.DefaultFormatter.GetResourceKey(System.String,System.Int32)">
            <summary>
            Override this method if your locale has complex rules around multiple units; e.g. Arabic, Russian
            </summary>
            <param name="resourceKey">The resource key that's being in formatting</param>
            <param name="number">The number of the units being used in formatting</param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.Localisation.Formatters.DefaultFormatter.GetResourceKey(System.String)">
            <summary>
            
            </summary>
            <param name="resourceKey"></param>
            <returns></returns>
        </member>
        <member name="T:Humanizer.Localisation.NumberToWords.INumberToWordsConverter">
            <summary>
            An interface you should implement to localise ToWords and ToOrdinalWords methods
            </summary>
        </member>
        <member name="M:Humanizer.Localisation.NumberToWords.INumberToWordsConverter.Convert(System.Int32)">
            <summary>
            Converts the number to string using the locale's default grammatical gender
            </summary>
            <param name="number"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.Localisation.NumberToWords.INumberToWordsConverter.Convert(System.Int32,Humanizer.GrammaticalGender)">
            <summary>
            Converts the number to string using the provided grammatical gender
            </summary>
            <param name="number"></param>
            <param name="gender"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.Localisation.NumberToWords.INumberToWordsConverter.ConvertToOrdinal(System.Int32)">
            <summary>
            Converts the number to ordinal string using the locale's default grammatical gender
            </summary>
            <param name="number"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.Localisation.NumberToWords.INumberToWordsConverter.ConvertToOrdinal(System.Int32,Humanizer.GrammaticalGender)">
            <summary>
            Converts the number to ordinal string using the provided grammatical gender
            </summary>
            <param name="number"></param>
            <param name="gender"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.Localisation.NumberToWords.GenderlessNumberToWordsConverter.Convert(System.Int32)">
            <summary>
            Converts the number to string
            </summary>
            <param name="number"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.Localisation.NumberToWords.GenderlessNumberToWordsConverter.Convert(System.Int32,Humanizer.GrammaticalGender)">
            <summary>
            Converts the number to string ignoring the provided grammatical gender
            </summary>
            <param name="number"></param>
            <param name="gender"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.Localisation.NumberToWords.GenderlessNumberToWordsConverter.ConvertToOrdinal(System.Int32)">
            <summary>
            Converts the number to ordinal string
            </summary>
            <param name="number"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.Localisation.NumberToWords.GenderlessNumberToWordsConverter.ConvertToOrdinal(System.Int32,Humanizer.GrammaticalGender)">
            <summary>
            Converts the number to ordinal string ignoring  the provided grammatical gender
            </summary>
            <param name="number"></param>
            <param name="gender"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.Localisation.NumberToWords.GenderedNumberToWordsConverter.Convert(System.Int32)">
            <summary>
            Converts the number to string using the locale's default grammatical gender
            </summary>
            <param name="number"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.Localisation.NumberToWords.GenderedNumberToWordsConverter.Convert(System.Int32,Humanizer.GrammaticalGender)">
            <summary>
            Converts the number to string using the provided grammatical gender
            </summary>
            <param name="number"></param>
            <param name="gender"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.Localisation.NumberToWords.GenderedNumberToWordsConverter.ConvertToOrdinal(System.Int32)">
            <summary>
            Converts the number to ordinal string using the locale's default grammatical gender
            </summary>
            <param name="number"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.Localisation.NumberToWords.GenderedNumberToWordsConverter.ConvertToOrdinal(System.Int32,Humanizer.GrammaticalGender)">
            <summary>
            Converts the number to ordinal string using the provided grammatical gender
            </summary>
            <param name="number"></param>
            <param name="gender"></param>
            <returns></returns>
        </member>
        <member name="T:Humanizer.GrammaticalCase">
            <summary>
            Options for specifying the desired grammatical case for the output words
            </summary>
        </member>
        <member name="F:Humanizer.GrammaticalCase.Nominative">
            <summary>
            Indicates the subject of a finite verb
            </summary>
        </member>
        <member name="F:Humanizer.GrammaticalCase.Genitive">
            <summary>
            Indicates the possessor of another noun
            </summary>
        </member>
        <member name="F:Humanizer.GrammaticalCase.Dative">
            <summary>
            Indicates the indirect object of a verb
            </summary>
        </member>
        <member name="F:Humanizer.GrammaticalCase.Accusative">
            <summary>
            Indicates the direct object of a verb
            </summary>
        </member>
        <member name="F:Humanizer.GrammaticalCase.Instrumental">
            <summary>
            Indicates an object used in performing an action
            </summary>
        </member>
        <member name="F:Humanizer.GrammaticalCase.Prepositional">
            <summary>
            Indicates the object of a preposition
            </summary>
        </member>
        <member name="T:Humanizer.GrammaticalGender">
            <summary>
            Options for specifying the desired grammatical gender for the output words
            </summary>
        </member>
        <member name="F:Humanizer.GrammaticalGender.Masculine">
            <summary>
            Indicates masculine grammatical gender
            </summary>
        </member>
        <member name="F:Humanizer.GrammaticalGender.Feminine">
            <summary>
            Indicates feminine grammatical gender
            </summary>
        </member>
        <member name="F:Humanizer.GrammaticalGender.Neuter">
            <summary>
            Indicates neuter grammatical gender
            </summary>
        </member>
        <member name="T:Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter">
            <summary>
            Dutch spelling of numbers is not really officially regulated.
            There are a few different rules that can be applied.
            Used the rules as stated here.
            http://www.beterspellen.nl/website/?pag=110
            </summary>
        </member>
        <member name="M:Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter.#ctor(System.Globalization.CultureInfo)">
            <summary>
            Constructor.
            </summary>
            <param name="culture">Culture to use.</param>
        </member>
        <member name="M:Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter.Convert(System.Int32)">
            <summary>
            3501.ToWords() -> "three thousand five hundred and one"
            </summary>
            <param name="number">Number to be turned to words</param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter.ConvertToOrdinal(System.Int32)">
            <summary>
            1.ToOrdinalWords() -> "first"
            </summary>
            <param name="number">Number to be turned to ordinal words</param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.Localisation.NumberToWords.Italian.ItalianCardinalNumberCruncher.SplitEveryThreeDigits(System.Int32)">
            <summary>
            Splits a number into a sequence of three-digits numbers, starting 
            from units, then thousands, millions, and so on.
            </summary>
            <param name="number">The number to split.</param>
            <returns>The sequence of three-digit numbers.</returns>
        </member>
        <member name="M:Humanizer.Localisation.NumberToWords.Italian.ItalianCardinalNumberCruncher.GetNextPartConverter">
            <summary>
            During number conversion to text, finds out the converter to use
            for the next three-digit set.
            </summary>
            <returns>The next conversion function to use.</returns>
        </member>
        <member name="M:Humanizer.Localisation.NumberToWords.Italian.ItalianCardinalNumberCruncher.ThreeDigitSetConverter(System.Int32,System.Boolean)">
            <summary>
            Converts a three-digit set to text.
            </summary>
            <param name="number">The three-digit set to convert.</param>
            <param name="thisIsLastSet">True if the current three-digit set is the last in the word.</param>
            <returns>The same three-digit set expressed as text.</returns>
        </member>
        <member name="M:Humanizer.Localisation.NumberToWords.Italian.ItalianCardinalNumberCruncher.UnitsConverter(System.Int32)">
            <summary>
            Converts a three-digit number, as units, to text.
            </summary>
            <param name="number">The three-digit number, as units, to convert.</param>
            <returns>The same three-digit number, as units, expressed as text.</returns>
        </member>
        <member name="M:Humanizer.Localisation.NumberToWords.Italian.ItalianCardinalNumberCruncher.ThousandsConverter(System.Int32)">
            <summary>
            Converts a thousands three-digit number to text.
            </summary>
            <param name="number">The three-digit number, as thousands, to convert.</param>
            <returns>The same three-digit number of thousands expressed as text.</returns>
        </member>
        <member name="M:Humanizer.Localisation.NumberToWords.Italian.ItalianCardinalNumberCruncher.MillionsConverter(System.Int32)">
            <summary>
            Converts a millions three-digit number to text.
            </summary>
            <param name="number">The three-digit number, as millions, to convert.</param>
            <returns>The same three-digit number of millions expressed as text.</returns>
        </member>
        <member name="M:Humanizer.Localisation.NumberToWords.Italian.ItalianCardinalNumberCruncher.BillionsConverter(System.Int32)">
            <summary>
            Converts a billions three-digit number to text.
            </summary>
            <param name="number">The three-digit number, as billions, to convert.</param>
            <returns>The same three-digit number of billions expressed as text.</returns>
        </member>
        <member name="F:Humanizer.Localisation.NumberToWords.Italian.ItalianCardinalNumberCruncher._unitsNumberToText">
            <summary>
            Lookup table converting units number to text. Index 1 for 1, index 2 for 2, up to index 9.
            </summary>
        </member>
        <member name="F:Humanizer.Localisation.NumberToWords.Italian.ItalianCardinalNumberCruncher._tensOver20NumberToText">
            <summary>
            Lookup table converting tens number to text. Index 2 for 20, index 3 for 30, up to index 9 for 90.
            </summary>
        </member>
        <member name="F:Humanizer.Localisation.NumberToWords.Italian.ItalianCardinalNumberCruncher._teensUnder20NumberToText">
            <summary>
            Lookup table converting teens number to text. Index 0 for 10, index 1 for 11, up to index 9 for 19.
            </summary>
        </member>
        <member name="F:Humanizer.Localisation.NumberToWords.Italian.ItalianCardinalNumberCruncher._hundredNumberToText">
            <summary>
            Lookup table converting hundreds number to text. Index 0 for no hundreds, index 1 for 100, up to index 9.
            </summary>
        </member>
        <member name="T:Humanizer.Localisation.NumberToWords.Italian.ItalianCardinalNumberCruncher.ThreeDigitSets">
            <summary>
            Enumerates sets of three-digits having distinct conversion to text.
            </summary>
        </member>
        <member name="F:Humanizer.Localisation.NumberToWords.Italian.ItalianCardinalNumberCruncher.ThreeDigitSets.Units">
            <summary>
            Lowest three-digits set, from 1 to 999.
            </summary>
        </member>
        <member name="F:Humanizer.Localisation.NumberToWords.Italian.ItalianCardinalNumberCruncher.ThreeDigitSets.Thousands">
            <summary>
            Three-digits set counting the thousands, from 1'000 to 999'000.
            </summary>
        </member>
        <member name="F:Humanizer.Localisation.NumberToWords.Italian.ItalianCardinalNumberCruncher.ThreeDigitSets.Millions">
            <summary>
            Three-digits set counting millions, from 1'000'000 to 999'000'000.
            </summary>
        </member>
        <member name="F:Humanizer.Localisation.NumberToWords.Italian.ItalianCardinalNumberCruncher.ThreeDigitSets.Billions">
            <summary>
            Three-digits set counting billions, from 1'000'000'000 to 999'000'000'000.
            </summary>
        </member>
        <member name="F:Humanizer.Localisation.NumberToWords.Italian.ItalianCardinalNumberCruncher.ThreeDigitSets.More">
            <summary>
            Three-digits set beyond 999 billions, from 1'000'000'000'000 onward.
            </summary>
        </member>
        <member name="F:Humanizer.Localisation.NumberToWords.Italian.ItalianOrdinalNumberCruncher._unitsUnder10NumberToText">
            <summary>
            Lookup table converting units number to text. Index 1 for 1, index 2 for 2, up to index 9.
            </summary>
        </member>
        <member name="T:Humanizer.Bytes.ByteSize">
            <summary>
            Represents a byte size value.
            </summary>
        </member>
        <member name="M:Humanizer.Bytes.ByteSize.ToString">
            <summary>
            Converts the value of the current ByteSize object to a string.
            The metric prefix symbol (bit, byte, kilo, mega, giga, tera) used is
            the largest metric prefix such that the corresponding value is greater
             than or equal to one.
            </summary>
        </member>
        <member name="T:Humanizer.ByteSizeExtensions">
            <summary>
            Provides extension methods for ByteSize
            </summary>
        </member>
        <member name="M:Humanizer.ByteSizeExtensions.Bits(System.Byte)">
            <summary>
            Considers input as bits
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.ByteSizeExtensions.Bits(System.SByte)">
            <summary>
            Considers input as bits
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.ByteSizeExtensions.Bits(System.Int16)">
            <summary>
            Considers input as bits
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.ByteSizeExtensions.Bits(System.UInt16)">
            <summary>
            Considers input as bits
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.ByteSizeExtensions.Bits(System.Int32)">
            <summary>
            Considers input as bits
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.ByteSizeExtensions.Bits(System.UInt32)">
            <summary>
            Considers input as bits
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.ByteSizeExtensions.Bits(System.Int64)">
            <summary>
            Considers input as bits
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.ByteSizeExtensions.Bytes(System.Byte)">
            <summary>
            Considers input as bytes
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.ByteSizeExtensions.Bytes(System.SByte)">
            <summary>
            Considers input as bytes
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.ByteSizeExtensions.Bytes(System.Int16)">
            <summary>
            Considers input as bytes
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.ByteSizeExtensions.Bytes(System.UInt16)">
            <summary>
            Considers input as bytes
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.ByteSizeExtensions.Bytes(System.Int32)">
            <summary>
            Considers input as bytes
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.ByteSizeExtensions.Bytes(System.UInt32)">
            <summary>
            Considers input as bytes
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.ByteSizeExtensions.Bytes(System.Double)">
            <summary>
            Considers input as bytes
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.ByteSizeExtensions.Bytes(System.Int64)">
            <summary>
            Considers input as bytes
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.ByteSizeExtensions.Kilobytes(System.Byte)">
            <summary>
            Considers input as kilobytes
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.ByteSizeExtensions.Kilobytes(System.SByte)">
            <summary>
            Considers input as kilobytes
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.ByteSizeExtensions.Kilobytes(System.Int16)">
            <summary>
            Considers input as kilobytes
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.ByteSizeExtensions.Kilobytes(System.UInt16)">
            <summary>
            Considers input as kilobytes
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.ByteSizeExtensions.Kilobytes(System.Int32)">
            <summary>
            Considers input as kilobytes
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.ByteSizeExtensions.Kilobytes(System.UInt32)">
            <summary>
            Considers input as kilobytes
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.ByteSizeExtensions.Kilobytes(System.Double)">
            <summary>
            Considers input as kilobytes
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.ByteSizeExtensions.Kilobytes(System.Int64)">
            <summary>
            Considers input as kilobytes
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.ByteSizeExtensions.Megabytes(System.Byte)">
            <summary>
            Considers input as megabytes
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.ByteSizeExtensions.Megabytes(System.SByte)">
            <summary>
            Considers input as megabytes
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.ByteSizeExtensions.Megabytes(System.Int16)">
            <summary>
            Considers input as megabytes
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.ByteSizeExtensions.Megabytes(System.UInt16)">
            <summary>
            Considers input as megabytes
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.ByteSizeExtensions.Megabytes(System.Int32)">
            <summary>
            Considers input as megabytes
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.ByteSizeExtensions.Megabytes(System.UInt32)">
            <summary>
            Considers input as megabytes
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.ByteSizeExtensions.Megabytes(System.Double)">
            <summary>
            Considers input as megabytes
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.ByteSizeExtensions.Megabytes(System.Int64)">
            <summary>
            Considers input as megabytes
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.ByteSizeExtensions.Gigabytes(System.Byte)">
            <summary>
            Considers input as gigabytes
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.ByteSizeExtensions.Gigabytes(System.SByte)">
            <summary>
            Considers input as gigabytes
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.ByteSizeExtensions.Gigabytes(System.Int16)">
            <summary>
            Considers input as gigabytes
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.ByteSizeExtensions.Gigabytes(System.UInt16)">
            <summary>
            Considers input as gigabytes
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.ByteSizeExtensions.Gigabytes(System.Int32)">
            <summary>
            Considers input as gigabytes
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.ByteSizeExtensions.Gigabytes(System.UInt32)">
            <summary>
            Considers input as gigabytes
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.ByteSizeExtensions.Gigabytes(System.Double)">
            <summary>
            Considers input as gigabytes
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.ByteSizeExtensions.Gigabytes(System.Int64)">
            <summary>
            Considers input as gigabytes
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.ByteSizeExtensions.Terabytes(System.Byte)">
            <summary>
            Considers input as terabytes
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.ByteSizeExtensions.Terabytes(System.SByte)">
            <summary>
            Considers input as terabytes
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.ByteSizeExtensions.Terabytes(System.Int16)">
            <summary>
            Considers input as terabytes
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.ByteSizeExtensions.Terabytes(System.UInt16)">
            <summary>
            Considers input as terabytes
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.ByteSizeExtensions.Terabytes(System.Int32)">
            <summary>
            Considers input as terabytes
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.ByteSizeExtensions.Terabytes(System.UInt32)">
            <summary>
            Considers input as terabytes
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.ByteSizeExtensions.Terabytes(System.Double)">
            <summary>
            Considers input as terabytes
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.ByteSizeExtensions.Terabytes(System.Int64)">
            <summary>
            Considers input as terabytes
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.ByteSizeExtensions.Humanize(Humanizer.Bytes.ByteSize,System.String)">
            <summary>
            Turns a byte quantity into human readable form, eg 2 GB
            </summary>
            <param name="input"></param>
            <param name="format">The string format to use</param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.ByteSizeExtensions.Per(Humanizer.Bytes.ByteSize,System.TimeSpan)">
            <summary>
            Turns a quantity of bytes in a given interval into a rate that can be manipulated
            </summary>
            <param name="size">Quantity of bytes</param>
            <param name="interval">Interval to create rate for</param>
            <returns></returns>
        </member>
        <member name="T:Humanizer.CasingExtensions">
            <summary>
            ApplyCase method to allow changing the case of a sentence easily
            </summary>
        </member>
        <member name="M:Humanizer.CasingExtensions.ApplyCase(System.String,Humanizer.LetterCasing)">
            <summary>
            Changes the casing of the provided input
            </summary>
            <param name="input"></param>
            <param name="casing"></param>
            <returns></returns>
        </member>
        <member name="T:Humanizer.Configuration.Configurator">
            <summary>
            Provides a configuration point for Humanizer
            </summary>
        </member>
        <member name="M:Humanizer.Configuration.Configurator.GetFormatter(System.Globalization.CultureInfo)">
            <summary>
            The formatter to be used
            </summary>
            <param name="culture">The culture to retrieve formatter for. Null means that current thread's UI culture should be used.</param>
        </member>
        <member name="M:Humanizer.Configuration.Configurator.GetNumberToWordsConverter(System.Globalization.CultureInfo)">
            <summary>
            The converter to be used
            </summary>
            <param name="culture">The culture to retrieve number to words converter for. Null means that current thread's UI culture should be used.</param>
        </member>
        <member name="P:Humanizer.Configuration.Configurator.CollectionFormatters">
            <summary>
            A registry of formatters used to format collections based on the current locale
            </summary>
        </member>
        <member name="P:Humanizer.Configuration.Configurator.Formatters">
            <summary>
            A registry of formatters used to format strings based on the current locale
            </summary>
        </member>
        <member name="P:Humanizer.Configuration.Configurator.NumberToWordsConverters">
            <summary>
            A registry of number to words converters used to localise ToWords and ToOrdinalWords methods
            </summary>
        </member>
        <member name="P:Humanizer.Configuration.Configurator.Ordinalizers">
            <summary>
            A registry of ordinalizers used to localise Ordinalize method
            </summary>
        </member>
        <member name="P:Humanizer.Configuration.Configurator.Ordinalizer">
            <summary>
            The ordinalizer to be used
            </summary>
        </member>
        <member name="P:Humanizer.Configuration.Configurator.DateTimeHumanizeStrategy">
            <summary>
            The strategy to be used for DateTime.Humanize
            </summary>
        </member>
        <member name="P:Humanizer.Configuration.Configurator.DateTimeOffsetHumanizeStrategy">
            <summary>
            The strategy to be used for DateTimeOffset.Humanize
            </summary>
        </member>
        <member name="P:Humanizer.Configuration.Configurator.EnumDescriptionPropertyLocator">
            <summary>
            A predicate function for description property of attribute to use for Enum.Humanize
            </summary>
        </member>
        <member name="T:Humanizer.DateHumanizeExtensions">
            <summary>
            Humanizes DateTime into human readable sentence
            </summary>
        </member>
        <member name="M:Humanizer.DateHumanizeExtensions.Humanize(System.DateTime,System.Boolean,System.Nullable{System.DateTime},System.Globalization.CultureInfo)">
            <summary>
            Turns the current or provided date into a human readable sentence
            </summary>
            <param name="input">The date to be humanized</param>
            <param name="utcDate">Boolean value indicating whether the date is in UTC or local</param>
            <param name="dateToCompareAgainst">Date to compare the input against. If null, current date is used as base</param>
            <param name="culture">Culture to use. If null, current thread's UI culture is used.</param>
            <returns>distance of time in words</returns>
        </member>
        <member name="M:Humanizer.DateHumanizeExtensions.Humanize(System.DateTimeOffset,System.Nullable{System.DateTimeOffset},System.Globalization.CultureInfo)">
            <summary>
            Turns the current or provided date into a human readable sentence
            </summary>
            <param name="input">The date to be humanized</param>
            <param name="dateToCompareAgainst">Date to compare the input against. If null, current date is used as base</param>
            <param name="culture">Culture to use. If null, current thread's UI culture is used.</param>
            <returns>distance of time in words</returns>
        </member>
        <member name="T:Humanizer.DateTimeHumanizeStrategy.PrecisionDateTimeHumanizeStrategy">
            <summary>
            Precision-based calculator for distance between two times
            </summary>
        </member>
        <member name="M:Humanizer.DateTimeHumanizeStrategy.PrecisionDateTimeHumanizeStrategy.#ctor(System.Double)">
            <summary>
            Constructs a precision-based calculator for distance of time with default precision 0.75.
            </summary>
            <param name="precision">precision of approximation, if not provided  0.75 will be used as a default precision.</param>
        </member>
        <member name="M:Humanizer.DateTimeHumanizeStrategy.PrecisionDateTimeHumanizeStrategy.Humanize(System.DateTime,System.DateTime,System.Globalization.CultureInfo)">
            <summary>
            Returns localized &amp; humanized distance of time between two dates; given a specific precision.
            </summary>
        </member>
        <member name="T:Humanizer.Localisation.Ordinalizers.IOrdinalizer">
            <summary>
            The interface used to localise the Ordinalize method
            </summary>
        </member>
        <member name="M:Humanizer.Localisation.Ordinalizers.IOrdinalizer.Convert(System.Int32,System.String)">
            <summary>
            Ordinalizes the number 
            </summary>
            <param name="number"></param>
            <param name="numberString"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.Localisation.Ordinalizers.IOrdinalizer.Convert(System.Int32,System.String,Humanizer.GrammaticalGender)">
            <summary>
            Ordinalizes the number using the provided grammatical gender
            </summary>
            <param name="number"></param>
            <param name="numberString"></param>
            <param name="gender"></param>
            <returns></returns>
        </member>
        <member name="T:Humanizer.Localisation.Tense">
            <summary>
            Enumerates the possible time references; past or future.
            </summary>
        </member>
        <member name="F:Humanizer.Localisation.Tense.Future">
            <summary>
            Indicates the future.
            </summary>
        </member>
        <member name="F:Humanizer.Localisation.Tense.Past">
            <summary>
            Indicates the past.
            </summary>
        </member>
        <member name="T:Humanizer.Plurality">
            <summary>
            Provides hint for Humanizer as to whether a word is singular, plural or with unknown plurality
            </summary>
        </member>
        <member name="F:Humanizer.Plurality.Singular">
            <summary>
            The word is singular
            </summary>
        </member>
        <member name="F:Humanizer.Plurality.Plural">
            <summary>
            The word is plural
            </summary>
        </member>
        <member name="F:Humanizer.Plurality.CouldBeEither">
            <summary>
            I am unsure of the plurality
            </summary>
        </member>
        <member name="T:Humanizer.TimeSpanHumanizeExtensions">
            <summary>
            Humanizes TimeSpan into human readable form
            </summary>
        </member>
        <member name="M:Humanizer.TimeSpanHumanizeExtensions.Humanize(System.TimeSpan,System.Int32,System.Globalization.CultureInfo,Humanizer.Localisation.TimeUnit,Humanizer.Localisation.TimeUnit)">
            <summary>
            Turns a TimeSpan into a human readable form. E.g. 1 day.
            </summary>
            <param name="timeSpan"></param>
            <param name="precision">The maximum number of time units to return. Defaulted is 1 which means the largest unit is returned</param>
            <param name="culture">Culture to use. If null, current thread's UI culture is used.</param>
            <param name="maxUnit">The maximum unit of time to output.</param>
            <param name="minUnit">The minimum unit of time to output.</param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.TimeSpanHumanizeExtensions.Humanize(System.TimeSpan,System.Int32,System.Boolean,System.Globalization.CultureInfo,Humanizer.Localisation.TimeUnit,Humanizer.Localisation.TimeUnit)">
            <summary>
            Turns a TimeSpan into a human readable form. E.g. 1 day.
            </summary>
            <param name="timeSpan"></param>
            <param name="precision">The maximum number of time units to return.</param>
            <param name="countEmptyUnits">Controls whether empty time units should be counted towards maximum number of time units. Leading empty time units never count.</param>
            <param name="culture">Culture to use. If null, current thread's UI culture is used.</param>
            <param name="maxUnit">The maximum unit of time to output.</param>
            <param name="minUnit">The minimum unit of time to output.</param>
            <returns></returns>
        </member>
        <member name="T:Humanizer.In">
            <summary>
            </summary>
        </member>
        <member name="M:Humanizer.In.TheYear(System.Int32)">
            <summary>
            Returns the first of January of the provided year
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.In.JanuaryOf(System.Int32)">
            <summary>
            Returns 1st of January of the year passed in
            </summary>
        </member>
        <member name="M:Humanizer.In.FebruaryOf(System.Int32)">
            <summary>
            Returns 1st of February of the year passed in
            </summary>
        </member>
        <member name="M:Humanizer.In.MarchOf(System.Int32)">
            <summary>
            Returns 1st of March of the year passed in
            </summary>
        </member>
        <member name="M:Humanizer.In.AprilOf(System.Int32)">
            <summary>
            Returns 1st of April of the year passed in
            </summary>
        </member>
        <member name="M:Humanizer.In.MayOf(System.Int32)">
            <summary>
            Returns 1st of May of the year passed in
            </summary>
        </member>
        <member name="M:Humanizer.In.JuneOf(System.Int32)">
            <summary>
            Returns 1st of June of the year passed in
            </summary>
        </member>
        <member name="M:Humanizer.In.JulyOf(System.Int32)">
            <summary>
            Returns 1st of July of the year passed in
            </summary>
        </member>
        <member name="M:Humanizer.In.AugustOf(System.Int32)">
            <summary>
            Returns 1st of August of the year passed in
            </summary>
        </member>
        <member name="M:Humanizer.In.SeptemberOf(System.Int32)">
            <summary>
            Returns 1st of September of the year passed in
            </summary>
        </member>
        <member name="M:Humanizer.In.OctoberOf(System.Int32)">
            <summary>
            Returns 1st of October of the year passed in
            </summary>
        </member>
        <member name="M:Humanizer.In.NovemberOf(System.Int32)">
            <summary>
            Returns 1st of November of the year passed in
            </summary>
        </member>
        <member name="M:Humanizer.In.DecemberOf(System.Int32)">
            <summary>
            Returns 1st of December of the year passed in
            </summary>
        </member>
        <member name="P:Humanizer.In.January">
            <summary>
            Returns 1st of January of the current year
            </summary>
        </member>
        <member name="P:Humanizer.In.February">
            <summary>
            Returns 1st of February of the current year
            </summary>
        </member>
        <member name="P:Humanizer.In.March">
            <summary>
            Returns 1st of March of the current year
            </summary>
        </member>
        <member name="P:Humanizer.In.April">
            <summary>
            Returns 1st of April of the current year
            </summary>
        </member>
        <member name="P:Humanizer.In.May">
            <summary>
            Returns 1st of May of the current year
            </summary>
        </member>
        <member name="P:Humanizer.In.June">
            <summary>
            Returns 1st of June of the current year
            </summary>
        </member>
        <member name="P:Humanizer.In.July">
            <summary>
            Returns 1st of July of the current year
            </summary>
        </member>
        <member name="P:Humanizer.In.August">
            <summary>
            Returns 1st of August of the current year
            </summary>
        </member>
        <member name="P:Humanizer.In.September">
            <summary>
            Returns 1st of September of the current year
            </summary>
        </member>
        <member name="P:Humanizer.In.October">
            <summary>
            Returns 1st of October of the current year
            </summary>
        </member>
        <member name="P:Humanizer.In.November">
            <summary>
            Returns 1st of November of the current year
            </summary>
        </member>
        <member name="P:Humanizer.In.December">
            <summary>
            Returns 1st of December of the current year
            </summary>
        </member>
        <member name="T:Humanizer.In.One">
            <summary>
            </summary>
        </member>
        <member name="M:Humanizer.In.One.SecondFrom(System.DateTime)">
            <summary>
            1 seconds from the provided date
            </summary>
        </member>
        <member name="M:Humanizer.In.One.MinuteFrom(System.DateTime)">
            <summary>
            1 minutes from the provided date
            </summary>
        </member>
        <member name="M:Humanizer.In.One.HourFrom(System.DateTime)">
            <summary>
            1 hours from the provided date
            </summary>
        </member>
        <member name="M:Humanizer.In.One.DayFrom(System.DateTime)">
            <summary>
            1 days from the provided date
            </summary>
        </member>
        <member name="M:Humanizer.In.One.WeekFrom(System.DateTime)">
            <summary>
            1 weeks from the provided date
            </summary>
        </member>
        <member name="M:Humanizer.In.One.MonthFrom(System.DateTime)">
            <summary>
            1 months from the provided date
            </summary>
        </member>
        <member name="M:Humanizer.In.One.YearFrom(System.DateTime)">
            <summary>
            1 years from the provided date
            </summary>
        </member>
        <member name="P:Humanizer.In.One.Second">
            <summary>
            1 seconds from now
            </summary>
        </member>
        <member name="P:Humanizer.In.One.Minute">
            <summary>
            1 minutes from now
            </summary>
        </member>
        <member name="P:Humanizer.In.One.Hour">
            <summary>
            1 hours from now
            </summary>
        </member>
        <member name="P:Humanizer.In.One.Day">
            <summary>
            1 days from now
            </summary>
        </member>
        <member name="P:Humanizer.In.One.Week">
            <summary>
            1 weeks from now
            </summary>
        </member>
        <member name="P:Humanizer.In.One.Month">
            <summary>
            1 months from now
            </summary>
        </member>
        <member name="P:Humanizer.In.One.Year">
            <summary>
            1 years from now
            </summary>
        </member>
        <member name="T:Humanizer.In.Two">
            <summary>
            </summary>
        </member>
        <member name="M:Humanizer.In.Two.SecondsFrom(System.DateTime)">
            <summary>
            2 seconds from the provided date
            </summary>
        </member>
        <member name="M:Humanizer.In.Two.MinutesFrom(System.DateTime)">
            <summary>
            2 minutes from the provided date
            </summary>
        </member>
        <member name="M:Humanizer.In.Two.HoursFrom(System.DateTime)">
            <summary>
            2 hours from the provided date
            </summary>
        </member>
        <member name="M:Humanizer.In.Two.DaysFrom(System.DateTime)">
            <summary>
            2 days from the provided date
            </summary>
        </member>
        <member name="M:Humanizer.In.Two.WeeksFrom(System.DateTime)">
            <summary>
            2 weeks from the provided date
            </summary>
        </member>
        <member name="M:Humanizer.In.Two.MonthsFrom(System.DateTime)">
            <summary>
            2 months from the provided date
            </summary>
        </member>
        <member name="M:Humanizer.In.Two.YearsFrom(System.DateTime)">
            <summary>
            2 years from the provided date
            </summary>
        </member>
        <member name="P:Humanizer.In.Two.Seconds">
            <summary>
            2 seconds from now
            </summary>
        </member>
        <member name="P:Humanizer.In.Two.Minutes">
            <summary>
            2 minutes from now
            </summary>
        </member>
        <member name="P:Humanizer.In.Two.Hours">
            <summary>
            2 hours from now
            </summary>
        </member>
        <member name="P:Humanizer.In.Two.Days">
            <summary>
            2 days from now
            </summary>
        </member>
        <member name="P:Humanizer.In.Two.Weeks">
            <summary>
            2 weeks from now
            </summary>
        </member>
        <member name="P:Humanizer.In.Two.Months">
            <summary>
            2 months from now
            </summary>
        </member>
        <member name="P:Humanizer.In.Two.Years">
            <summary>
            2 years from now
            </summary>
        </member>
        <member name="T:Humanizer.In.Three">
            <summary>
            </summary>
        </member>
        <member name="M:Humanizer.In.Three.SecondsFrom(System.DateTime)">
            <summary>
            3 seconds from the provided date
            </summary>
        </member>
        <member name="M:Humanizer.In.Three.MinutesFrom(System.DateTime)">
            <summary>
            3 minutes from the provided date
            </summary>
        </member>
        <member name="M:Humanizer.In.Three.HoursFrom(System.DateTime)">
            <summary>
            3 hours from the provided date
            </summary>
        </member>
        <member name="M:Humanizer.In.Three.DaysFrom(System.DateTime)">
            <summary>
            3 days from the provided date
            </summary>
        </member>
        <member name="M:Humanizer.In.Three.WeeksFrom(System.DateTime)">
            <summary>
            3 weeks from the provided date
            </summary>
        </member>
        <member name="M:Humanizer.In.Three.MonthsFrom(System.DateTime)">
            <summary>
            3 months from the provided date
            </summary>
        </member>
        <member name="M:Humanizer.In.Three.YearsFrom(System.DateTime)">
            <summary>
            3 years from the provided date
            </summary>
        </member>
        <member name="P:Humanizer.In.Three.Seconds">
            <summary>
            3 seconds from now
            </summary>
        </member>
        <member name="P:Humanizer.In.Three.Minutes">
            <summary>
            3 minutes from now
            </summary>
        </member>
        <member name="P:Humanizer.In.Three.Hours">
            <summary>
            3 hours from now
            </summary>
        </member>
        <member name="P:Humanizer.In.Three.Days">
            <summary>
            3 days from now
            </summary>
        </member>
        <member name="P:Humanizer.In.Three.Weeks">
            <summary>
            3 weeks from now
            </summary>
        </member>
        <member name="P:Humanizer.In.Three.Months">
            <summary>
            3 months from now
            </summary>
        </member>
        <member name="P:Humanizer.In.Three.Years">
            <summary>
            3 years from now
            </summary>
        </member>
        <member name="T:Humanizer.In.Four">
            <summary>
            </summary>
        </member>
        <member name="M:Humanizer.In.Four.SecondsFrom(System.DateTime)">
            <summary>
            4 seconds from the provided date
            </summary>
        </member>
        <member name="M:Humanizer.In.Four.MinutesFrom(System.DateTime)">
            <summary>
            4 minutes from the provided date
            </summary>
        </member>
        <member name="M:Humanizer.In.Four.HoursFrom(System.DateTime)">
            <summary>
            4 hours from the provided date
            </summary>
        </member>
        <member name="M:Humanizer.In.Four.DaysFrom(System.DateTime)">
            <summary>
            4 days from the provided date
            </summary>
        </member>
        <member name="M:Humanizer.In.Four.WeeksFrom(System.DateTime)">
            <summary>
            4 weeks from the provided date
            </summary>
        </member>
        <member name="M:Humanizer.In.Four.MonthsFrom(System.DateTime)">
            <summary>
            4 months from the provided date
            </summary>
        </member>
        <member name="M:Humanizer.In.Four.YearsFrom(System.DateTime)">
            <summary>
            4 years from the provided date
            </summary>
        </member>
        <member name="P:Humanizer.In.Four.Seconds">
            <summary>
            4 seconds from now
            </summary>
        </member>
        <member name="P:Humanizer.In.Four.Minutes">
            <summary>
            4 minutes from now
            </summary>
        </member>
        <member name="P:Humanizer.In.Four.Hours">
            <summary>
            4 hours from now
            </summary>
        </member>
        <member name="P:Humanizer.In.Four.Days">
            <summary>
            4 days from now
            </summary>
        </member>
        <member name="P:Humanizer.In.Four.Weeks">
            <summary>
            4 weeks from now
            </summary>
        </member>
        <member name="P:Humanizer.In.Four.Months">
            <summary>
            4 months from now
            </summary>
        </member>
        <member name="P:Humanizer.In.Four.Years">
            <summary>
            4 years from now
            </summary>
        </member>
        <member name="T:Humanizer.In.Five">
            <summary>
            </summary>
        </member>
        <member name="M:Humanizer.In.Five.SecondsFrom(System.DateTime)">
            <summary>
            5 seconds from the provided date
            </summary>
        </member>
        <member name="M:Humanizer.In.Five.MinutesFrom(System.DateTime)">
            <summary>
            5 minutes from the provided date
            </summary>
        </member>
        <member name="M:Humanizer.In.Five.HoursFrom(System.DateTime)">
            <summary>
            5 hours from the provided date
            </summary>
        </member>
        <member name="M:Humanizer.In.Five.DaysFrom(System.DateTime)">
            <summary>
            5 days from the provided date
            </summary>
        </member>
        <member name="M:Humanizer.In.Five.WeeksFrom(System.DateTime)">
            <summary>
            5 weeks from the provided date
            </summary>
        </member>
        <member name="M:Humanizer.In.Five.MonthsFrom(System.DateTime)">
            <summary>
            5 months from the provided date
            </summary>
        </member>
        <member name="M:Humanizer.In.Five.YearsFrom(System.DateTime)">
            <summary>
            5 years from the provided date
            </summary>
        </member>
        <member name="P:Humanizer.In.Five.Seconds">
            <summary>
            5 seconds from now
            </summary>
        </member>
        <member name="P:Humanizer.In.Five.Minutes">
            <summary>
            5 minutes from now
            </summary>
        </member>
        <member name="P:Humanizer.In.Five.Hours">
            <summary>
            5 hours from now
            </summary>
        </member>
        <member name="P:Humanizer.In.Five.Days">
            <summary>
            5 days from now
            </summary>
        </member>
        <member name="P:Humanizer.In.Five.Weeks">
            <summary>
            5 weeks from now
            </summary>
        </member>
        <member name="P:Humanizer.In.Five.Months">
            <summary>
            5 months from now
            </summary>
        </member>
        <member name="P:Humanizer.In.Five.Years">
            <summary>
            5 years from now
            </summary>
        </member>
        <member name="T:Humanizer.In.Six">
            <summary>
            </summary>
        </member>
        <member name="M:Humanizer.In.Six.SecondsFrom(System.DateTime)">
            <summary>
            6 seconds from the provided date
            </summary>
        </member>
        <member name="M:Humanizer.In.Six.MinutesFrom(System.DateTime)">
            <summary>
            6 minutes from the provided date
            </summary>
        </member>
        <member name="M:Humanizer.In.Six.HoursFrom(System.DateTime)">
            <summary>
            6 hours from the provided date
            </summary>
        </member>
        <member name="M:Humanizer.In.Six.DaysFrom(System.DateTime)">
            <summary>
            6 days from the provided date
            </summary>
        </member>
        <member name="M:Humanizer.In.Six.WeeksFrom(System.DateTime)">
            <summary>
            6 weeks from the provided date
            </summary>
        </member>
        <member name="M:Humanizer.In.Six.MonthsFrom(System.DateTime)">
            <summary>
            6 months from the provided date
            </summary>
        </member>
        <member name="M:Humanizer.In.Six.YearsFrom(System.DateTime)">
            <summary>
            6 years from the provided date
            </summary>
        </member>
        <member name="P:Humanizer.In.Six.Seconds">
            <summary>
            6 seconds from now
            </summary>
        </member>
        <member name="P:Humanizer.In.Six.Minutes">
            <summary>
            6 minutes from now
            </summary>
        </member>
        <member name="P:Humanizer.In.Six.Hours">
            <summary>
            6 hours from now
            </summary>
        </member>
        <member name="P:Humanizer.In.Six.Days">
            <summary>
            6 days from now
            </summary>
        </member>
        <member name="P:Humanizer.In.Six.Weeks">
            <summary>
            6 weeks from now
            </summary>
        </member>
        <member name="P:Humanizer.In.Six.Months">
            <summary>
            6 months from now
            </summary>
        </member>
        <member name="P:Humanizer.In.Six.Years">
            <summary>
            6 years from now
            </summary>
        </member>
        <member name="T:Humanizer.In.Seven">
            <summary>
            </summary>
        </member>
        <member name="M:Humanizer.In.Seven.SecondsFrom(System.DateTime)">
            <summary>
            7 seconds from the provided date
            </summary>
        </member>
        <member name="M:Humanizer.In.Seven.MinutesFrom(System.DateTime)">
            <summary>
            7 minutes from the provided date
            </summary>
        </member>
        <member name="M:Humanizer.In.Seven.HoursFrom(System.DateTime)">
            <summary>
            7 hours from the provided date
            </summary>
        </member>
        <member name="M:Humanizer.In.Seven.DaysFrom(System.DateTime)">
            <summary>
            7 days from the provided date
            </summary>
        </member>
        <member name="M:Humanizer.In.Seven.WeeksFrom(System.DateTime)">
            <summary>
            7 weeks from the provided date
            </summary>
        </member>
        <member name="M:Humanizer.In.Seven.MonthsFrom(System.DateTime)">
            <summary>
            7 months from the provided date
            </summary>
        </member>
        <member name="M:Humanizer.In.Seven.YearsFrom(System.DateTime)">
            <summary>
            7 years from the provided date
            </summary>
        </member>
        <member name="P:Humanizer.In.Seven.Seconds">
            <summary>
            7 seconds from now
            </summary>
        </member>
        <member name="P:Humanizer.In.Seven.Minutes">
            <summary>
            7 minutes from now
            </summary>
        </member>
        <member name="P:Humanizer.In.Seven.Hours">
            <summary>
            7 hours from now
            </summary>
        </member>
        <member name="P:Humanizer.In.Seven.Days">
            <summary>
            7 days from now
            </summary>
        </member>
        <member name="P:Humanizer.In.Seven.Weeks">
            <summary>
            7 weeks from now
            </summary>
        </member>
        <member name="P:Humanizer.In.Seven.Months">
            <summary>
            7 months from now
            </summary>
        </member>
        <member name="P:Humanizer.In.Seven.Years">
            <summary>
            7 years from now
            </summary>
        </member>
        <member name="T:Humanizer.In.Eight">
            <summary>
            </summary>
        </member>
        <member name="M:Humanizer.In.Eight.SecondsFrom(System.DateTime)">
            <summary>
            8 seconds from the provided date
            </summary>
        </member>
        <member name="M:Humanizer.In.Eight.MinutesFrom(System.DateTime)">
            <summary>
            8 minutes from the provided date
            </summary>
        </member>
        <member name="M:Humanizer.In.Eight.HoursFrom(System.DateTime)">
            <summary>
            8 hours from the provided date
            </summary>
        </member>
        <member name="M:Humanizer.In.Eight.DaysFrom(System.DateTime)">
            <summary>
            8 days from the provided date
            </summary>
        </member>
        <member name="M:Humanizer.In.Eight.WeeksFrom(System.DateTime)">
            <summary>
            8 weeks from the provided date
            </summary>
        </member>
        <member name="M:Humanizer.In.Eight.MonthsFrom(System.DateTime)">
            <summary>
            8 months from the provided date
            </summary>
        </member>
        <member name="M:Humanizer.In.Eight.YearsFrom(System.DateTime)">
            <summary>
            8 years from the provided date
            </summary>
        </member>
        <member name="P:Humanizer.In.Eight.Seconds">
            <summary>
            8 seconds from now
            </summary>
        </member>
        <member name="P:Humanizer.In.Eight.Minutes">
            <summary>
            8 minutes from now
            </summary>
        </member>
        <member name="P:Humanizer.In.Eight.Hours">
            <summary>
            8 hours from now
            </summary>
        </member>
        <member name="P:Humanizer.In.Eight.Days">
            <summary>
            8 days from now
            </summary>
        </member>
        <member name="P:Humanizer.In.Eight.Weeks">
            <summary>
            8 weeks from now
            </summary>
        </member>
        <member name="P:Humanizer.In.Eight.Months">
            <summary>
            8 months from now
            </summary>
        </member>
        <member name="P:Humanizer.In.Eight.Years">
            <summary>
            8 years from now
            </summary>
        </member>
        <member name="T:Humanizer.In.Nine">
            <summary>
            </summary>
        </member>
        <member name="M:Humanizer.In.Nine.SecondsFrom(System.DateTime)">
            <summary>
            9 seconds from the provided date
            </summary>
        </member>
        <member name="M:Humanizer.In.Nine.MinutesFrom(System.DateTime)">
            <summary>
            9 minutes from the provided date
            </summary>
        </member>
        <member name="M:Humanizer.In.Nine.HoursFrom(System.DateTime)">
            <summary>
            9 hours from the provided date
            </summary>
        </member>
        <member name="M:Humanizer.In.Nine.DaysFrom(System.DateTime)">
            <summary>
            9 days from the provided date
            </summary>
        </member>
        <member name="M:Humanizer.In.Nine.WeeksFrom(System.DateTime)">
            <summary>
            9 weeks from the provided date
            </summary>
        </member>
        <member name="M:Humanizer.In.Nine.MonthsFrom(System.DateTime)">
            <summary>
            9 months from the provided date
            </summary>
        </member>
        <member name="M:Humanizer.In.Nine.YearsFrom(System.DateTime)">
            <summary>
            9 years from the provided date
            </summary>
        </member>
        <member name="P:Humanizer.In.Nine.Seconds">
            <summary>
            9 seconds from now
            </summary>
        </member>
        <member name="P:Humanizer.In.Nine.Minutes">
            <summary>
            9 minutes from now
            </summary>
        </member>
        <member name="P:Humanizer.In.Nine.Hours">
            <summary>
            9 hours from now
            </summary>
        </member>
        <member name="P:Humanizer.In.Nine.Days">
            <summary>
            9 days from now
            </summary>
        </member>
        <member name="P:Humanizer.In.Nine.Weeks">
            <summary>
            9 weeks from now
            </summary>
        </member>
        <member name="P:Humanizer.In.Nine.Months">
            <summary>
            9 months from now
            </summary>
        </member>
        <member name="P:Humanizer.In.Nine.Years">
            <summary>
            9 years from now
            </summary>
        </member>
        <member name="T:Humanizer.In.Ten">
            <summary>
            </summary>
        </member>
        <member name="M:Humanizer.In.Ten.SecondsFrom(System.DateTime)">
            <summary>
            10 seconds from the provided date
            </summary>
        </member>
        <member name="M:Humanizer.In.Ten.MinutesFrom(System.DateTime)">
            <summary>
            10 minutes from the provided date
            </summary>
        </member>
        <member name="M:Humanizer.In.Ten.HoursFrom(System.DateTime)">
            <summary>
            10 hours from the provided date
            </summary>
        </member>
        <member name="M:Humanizer.In.Ten.DaysFrom(System.DateTime)">
            <summary>
            10 days from the provided date
            </summary>
        </member>
        <member name="M:Humanizer.In.Ten.WeeksFrom(System.DateTime)">
            <summary>
            10 weeks from the provided date
            </summary>
        </member>
        <member name="M:Humanizer.In.Ten.MonthsFrom(System.DateTime)">
            <summary>
            10 months from the provided date
            </summary>
        </member>
        <member name="M:Humanizer.In.Ten.YearsFrom(System.DateTime)">
            <summary>
            10 years from the provided date
            </summary>
        </member>
        <member name="P:Humanizer.In.Ten.Seconds">
            <summary>
            10 seconds from now
            </summary>
        </member>
        <member name="P:Humanizer.In.Ten.Minutes">
            <summary>
            10 minutes from now
            </summary>
        </member>
        <member name="P:Humanizer.In.Ten.Hours">
            <summary>
            10 hours from now
            </summary>
        </member>
        <member name="P:Humanizer.In.Ten.Days">
            <summary>
            10 days from now
            </summary>
        </member>
        <member name="P:Humanizer.In.Ten.Weeks">
            <summary>
            10 weeks from now
            </summary>
        </member>
        <member name="P:Humanizer.In.Ten.Months">
            <summary>
            10 months from now
            </summary>
        </member>
        <member name="P:Humanizer.In.Ten.Years">
            <summary>
            10 years from now
            </summary>
        </member>
        <member name="T:Humanizer.On">
            <summary>
            </summary>
        </member>
        <member name="T:Humanizer.On.January">
            <summary>
            Provides fluent date accessors for January
            </summary>
        </member>
        <member name="M:Humanizer.On.January.The(System.Int32)">
            <summary>
            The nth day of January of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.January.The1st">
            <summary>
            The 1st day of January of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.January.The2nd">
            <summary>
            The 2nd day of January of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.January.The3rd">
            <summary>
            The 3rd day of January of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.January.The4th">
            <summary>
            The 4th day of January of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.January.The5th">
            <summary>
            The 5th day of January of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.January.The6th">
            <summary>
            The 6th day of January of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.January.The7th">
            <summary>
            The 7th day of January of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.January.The8th">
            <summary>
            The 8th day of January of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.January.The9th">
            <summary>
            The 9th day of January of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.January.The10th">
            <summary>
            The 10th day of January of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.January.The11th">
            <summary>
            The 11th day of January of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.January.The12th">
            <summary>
            The 12th day of January of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.January.The13th">
            <summary>
            The 13th day of January of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.January.The14th">
            <summary>
            The 14th day of January of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.January.The15th">
            <summary>
            The 15th day of January of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.January.The16th">
            <summary>
            The 16th day of January of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.January.The17th">
            <summary>
            The 17th day of January of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.January.The18th">
            <summary>
            The 18th day of January of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.January.The19th">
            <summary>
            The 19th day of January of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.January.The20th">
            <summary>
            The 20th day of January of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.January.The21st">
            <summary>
            The 21st day of January of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.January.The22nd">
            <summary>
            The 22nd day of January of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.January.The23rd">
            <summary>
            The 23rd day of January of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.January.The24th">
            <summary>
            The 24th day of January of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.January.The25th">
            <summary>
            The 25th day of January of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.January.The26th">
            <summary>
            The 26th day of January of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.January.The27th">
            <summary>
            The 27th day of January of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.January.The28th">
            <summary>
            The 28th day of January of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.January.The29th">
            <summary>
            The 29th day of January of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.January.The30th">
            <summary>
            The 30th day of January of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.January.The31st">
            <summary>
            The 31st day of January of the current year
            </summary>
        </member>
        <member name="T:Humanizer.On.February">
            <summary>
            Provides fluent date accessors for February
            </summary>
        </member>
        <member name="M:Humanizer.On.February.The(System.Int32)">
            <summary>
            The nth day of February of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.February.The1st">
            <summary>
            The 1st day of February of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.February.The2nd">
            <summary>
            The 2nd day of February of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.February.The3rd">
            <summary>
            The 3rd day of February of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.February.The4th">
            <summary>
            The 4th day of February of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.February.The5th">
            <summary>
            The 5th day of February of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.February.The6th">
            <summary>
            The 6th day of February of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.February.The7th">
            <summary>
            The 7th day of February of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.February.The8th">
            <summary>
            The 8th day of February of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.February.The9th">
            <summary>
            The 9th day of February of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.February.The10th">
            <summary>
            The 10th day of February of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.February.The11th">
            <summary>
            The 11th day of February of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.February.The12th">
            <summary>
            The 12th day of February of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.February.The13th">
            <summary>
            The 13th day of February of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.February.The14th">
            <summary>
            The 14th day of February of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.February.The15th">
            <summary>
            The 15th day of February of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.February.The16th">
            <summary>
            The 16th day of February of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.February.The17th">
            <summary>
            The 17th day of February of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.February.The18th">
            <summary>
            The 18th day of February of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.February.The19th">
            <summary>
            The 19th day of February of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.February.The20th">
            <summary>
            The 20th day of February of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.February.The21st">
            <summary>
            The 21st day of February of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.February.The22nd">
            <summary>
            The 22nd day of February of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.February.The23rd">
            <summary>
            The 23rd day of February of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.February.The24th">
            <summary>
            The 24th day of February of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.February.The25th">
            <summary>
            The 25th day of February of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.February.The26th">
            <summary>
            The 26th day of February of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.February.The27th">
            <summary>
            The 27th day of February of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.February.The28th">
            <summary>
            The 28th day of February of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.February.The29th">
            <summary>
            The 29th day of February of the current year
            </summary>
        </member>
        <member name="T:Humanizer.On.March">
            <summary>
            Provides fluent date accessors for March
            </summary>
        </member>
        <member name="M:Humanizer.On.March.The(System.Int32)">
            <summary>
            The nth day of March of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.March.The1st">
            <summary>
            The 1st day of March of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.March.The2nd">
            <summary>
            The 2nd day of March of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.March.The3rd">
            <summary>
            The 3rd day of March of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.March.The4th">
            <summary>
            The 4th day of March of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.March.The5th">
            <summary>
            The 5th day of March of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.March.The6th">
            <summary>
            The 6th day of March of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.March.The7th">
            <summary>
            The 7th day of March of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.March.The8th">
            <summary>
            The 8th day of March of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.March.The9th">
            <summary>
            The 9th day of March of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.March.The10th">
            <summary>
            The 10th day of March of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.March.The11th">
            <summary>
            The 11th day of March of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.March.The12th">
            <summary>
            The 12th day of March of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.March.The13th">
            <summary>
            The 13th day of March of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.March.The14th">
            <summary>
            The 14th day of March of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.March.The15th">
            <summary>
            The 15th day of March of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.March.The16th">
            <summary>
            The 16th day of March of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.March.The17th">
            <summary>
            The 17th day of March of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.March.The18th">
            <summary>
            The 18th day of March of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.March.The19th">
            <summary>
            The 19th day of March of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.March.The20th">
            <summary>
            The 20th day of March of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.March.The21st">
            <summary>
            The 21st day of March of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.March.The22nd">
            <summary>
            The 22nd day of March of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.March.The23rd">
            <summary>
            The 23rd day of March of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.March.The24th">
            <summary>
            The 24th day of March of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.March.The25th">
            <summary>
            The 25th day of March of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.March.The26th">
            <summary>
            The 26th day of March of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.March.The27th">
            <summary>
            The 27th day of March of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.March.The28th">
            <summary>
            The 28th day of March of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.March.The29th">
            <summary>
            The 29th day of March of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.March.The30th">
            <summary>
            The 30th day of March of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.March.The31st">
            <summary>
            The 31st day of March of the current year
            </summary>
        </member>
        <member name="T:Humanizer.On.April">
            <summary>
            Provides fluent date accessors for April
            </summary>
        </member>
        <member name="M:Humanizer.On.April.The(System.Int32)">
            <summary>
            The nth day of April of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.April.The1st">
            <summary>
            The 1st day of April of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.April.The2nd">
            <summary>
            The 2nd day of April of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.April.The3rd">
            <summary>
            The 3rd day of April of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.April.The4th">
            <summary>
            The 4th day of April of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.April.The5th">
            <summary>
            The 5th day of April of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.April.The6th">
            <summary>
            The 6th day of April of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.April.The7th">
            <summary>
            The 7th day of April of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.April.The8th">
            <summary>
            The 8th day of April of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.April.The9th">
            <summary>
            The 9th day of April of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.April.The10th">
            <summary>
            The 10th day of April of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.April.The11th">
            <summary>
            The 11th day of April of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.April.The12th">
            <summary>
            The 12th day of April of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.April.The13th">
            <summary>
            The 13th day of April of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.April.The14th">
            <summary>
            The 14th day of April of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.April.The15th">
            <summary>
            The 15th day of April of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.April.The16th">
            <summary>
            The 16th day of April of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.April.The17th">
            <summary>
            The 17th day of April of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.April.The18th">
            <summary>
            The 18th day of April of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.April.The19th">
            <summary>
            The 19th day of April of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.April.The20th">
            <summary>
            The 20th day of April of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.April.The21st">
            <summary>
            The 21st day of April of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.April.The22nd">
            <summary>
            The 22nd day of April of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.April.The23rd">
            <summary>
            The 23rd day of April of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.April.The24th">
            <summary>
            The 24th day of April of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.April.The25th">
            <summary>
            The 25th day of April of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.April.The26th">
            <summary>
            The 26th day of April of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.April.The27th">
            <summary>
            The 27th day of April of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.April.The28th">
            <summary>
            The 28th day of April of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.April.The29th">
            <summary>
            The 29th day of April of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.April.The30th">
            <summary>
            The 30th day of April of the current year
            </summary>
        </member>
        <member name="T:Humanizer.On.May">
            <summary>
            Provides fluent date accessors for May
            </summary>
        </member>
        <member name="M:Humanizer.On.May.The(System.Int32)">
            <summary>
            The nth day of May of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.May.The1st">
            <summary>
            The 1st day of May of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.May.The2nd">
            <summary>
            The 2nd day of May of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.May.The3rd">
            <summary>
            The 3rd day of May of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.May.The4th">
            <summary>
            The 4th day of May of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.May.The5th">
            <summary>
            The 5th day of May of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.May.The6th">
            <summary>
            The 6th day of May of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.May.The7th">
            <summary>
            The 7th day of May of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.May.The8th">
            <summary>
            The 8th day of May of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.May.The9th">
            <summary>
            The 9th day of May of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.May.The10th">
            <summary>
            The 10th day of May of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.May.The11th">
            <summary>
            The 11th day of May of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.May.The12th">
            <summary>
            The 12th day of May of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.May.The13th">
            <summary>
            The 13th day of May of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.May.The14th">
            <summary>
            The 14th day of May of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.May.The15th">
            <summary>
            The 15th day of May of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.May.The16th">
            <summary>
            The 16th day of May of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.May.The17th">
            <summary>
            The 17th day of May of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.May.The18th">
            <summary>
            The 18th day of May of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.May.The19th">
            <summary>
            The 19th day of May of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.May.The20th">
            <summary>
            The 20th day of May of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.May.The21st">
            <summary>
            The 21st day of May of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.May.The22nd">
            <summary>
            The 22nd day of May of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.May.The23rd">
            <summary>
            The 23rd day of May of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.May.The24th">
            <summary>
            The 24th day of May of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.May.The25th">
            <summary>
            The 25th day of May of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.May.The26th">
            <summary>
            The 26th day of May of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.May.The27th">
            <summary>
            The 27th day of May of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.May.The28th">
            <summary>
            The 28th day of May of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.May.The29th">
            <summary>
            The 29th day of May of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.May.The30th">
            <summary>
            The 30th day of May of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.May.The31st">
            <summary>
            The 31st day of May of the current year
            </summary>
        </member>
        <member name="T:Humanizer.On.June">
            <summary>
            Provides fluent date accessors for June
            </summary>
        </member>
        <member name="M:Humanizer.On.June.The(System.Int32)">
            <summary>
            The nth day of June of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.June.The1st">
            <summary>
            The 1st day of June of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.June.The2nd">
            <summary>
            The 2nd day of June of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.June.The3rd">
            <summary>
            The 3rd day of June of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.June.The4th">
            <summary>
            The 4th day of June of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.June.The5th">
            <summary>
            The 5th day of June of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.June.The6th">
            <summary>
            The 6th day of June of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.June.The7th">
            <summary>
            The 7th day of June of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.June.The8th">
            <summary>
            The 8th day of June of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.June.The9th">
            <summary>
            The 9th day of June of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.June.The10th">
            <summary>
            The 10th day of June of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.June.The11th">
            <summary>
            The 11th day of June of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.June.The12th">
            <summary>
            The 12th day of June of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.June.The13th">
            <summary>
            The 13th day of June of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.June.The14th">
            <summary>
            The 14th day of June of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.June.The15th">
            <summary>
            The 15th day of June of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.June.The16th">
            <summary>
            The 16th day of June of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.June.The17th">
            <summary>
            The 17th day of June of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.June.The18th">
            <summary>
            The 18th day of June of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.June.The19th">
            <summary>
            The 19th day of June of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.June.The20th">
            <summary>
            The 20th day of June of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.June.The21st">
            <summary>
            The 21st day of June of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.June.The22nd">
            <summary>
            The 22nd day of June of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.June.The23rd">
            <summary>
            The 23rd day of June of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.June.The24th">
            <summary>
            The 24th day of June of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.June.The25th">
            <summary>
            The 25th day of June of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.June.The26th">
            <summary>
            The 26th day of June of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.June.The27th">
            <summary>
            The 27th day of June of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.June.The28th">
            <summary>
            The 28th day of June of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.June.The29th">
            <summary>
            The 29th day of June of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.June.The30th">
            <summary>
            The 30th day of June of the current year
            </summary>
        </member>
        <member name="T:Humanizer.On.July">
            <summary>
            Provides fluent date accessors for July
            </summary>
        </member>
        <member name="M:Humanizer.On.July.The(System.Int32)">
            <summary>
            The nth day of July of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.July.The1st">
            <summary>
            The 1st day of July of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.July.The2nd">
            <summary>
            The 2nd day of July of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.July.The3rd">
            <summary>
            The 3rd day of July of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.July.The4th">
            <summary>
            The 4th day of July of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.July.The5th">
            <summary>
            The 5th day of July of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.July.The6th">
            <summary>
            The 6th day of July of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.July.The7th">
            <summary>
            The 7th day of July of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.July.The8th">
            <summary>
            The 8th day of July of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.July.The9th">
            <summary>
            The 9th day of July of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.July.The10th">
            <summary>
            The 10th day of July of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.July.The11th">
            <summary>
            The 11th day of July of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.July.The12th">
            <summary>
            The 12th day of July of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.July.The13th">
            <summary>
            The 13th day of July of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.July.The14th">
            <summary>
            The 14th day of July of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.July.The15th">
            <summary>
            The 15th day of July of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.July.The16th">
            <summary>
            The 16th day of July of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.July.The17th">
            <summary>
            The 17th day of July of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.July.The18th">
            <summary>
            The 18th day of July of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.July.The19th">
            <summary>
            The 19th day of July of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.July.The20th">
            <summary>
            The 20th day of July of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.July.The21st">
            <summary>
            The 21st day of July of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.July.The22nd">
            <summary>
            The 22nd day of July of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.July.The23rd">
            <summary>
            The 23rd day of July of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.July.The24th">
            <summary>
            The 24th day of July of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.July.The25th">
            <summary>
            The 25th day of July of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.July.The26th">
            <summary>
            The 26th day of July of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.July.The27th">
            <summary>
            The 27th day of July of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.July.The28th">
            <summary>
            The 28th day of July of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.July.The29th">
            <summary>
            The 29th day of July of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.July.The30th">
            <summary>
            The 30th day of July of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.July.The31st">
            <summary>
            The 31st day of July of the current year
            </summary>
        </member>
        <member name="T:Humanizer.On.August">
            <summary>
            Provides fluent date accessors for August
            </summary>
        </member>
        <member name="M:Humanizer.On.August.The(System.Int32)">
            <summary>
            The nth day of August of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.August.The1st">
            <summary>
            The 1st day of August of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.August.The2nd">
            <summary>
            The 2nd day of August of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.August.The3rd">
            <summary>
            The 3rd day of August of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.August.The4th">
            <summary>
            The 4th day of August of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.August.The5th">
            <summary>
            The 5th day of August of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.August.The6th">
            <summary>
            The 6th day of August of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.August.The7th">
            <summary>
            The 7th day of August of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.August.The8th">
            <summary>
            The 8th day of August of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.August.The9th">
            <summary>
            The 9th day of August of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.August.The10th">
            <summary>
            The 10th day of August of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.August.The11th">
            <summary>
            The 11th day of August of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.August.The12th">
            <summary>
            The 12th day of August of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.August.The13th">
            <summary>
            The 13th day of August of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.August.The14th">
            <summary>
            The 14th day of August of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.August.The15th">
            <summary>
            The 15th day of August of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.August.The16th">
            <summary>
            The 16th day of August of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.August.The17th">
            <summary>
            The 17th day of August of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.August.The18th">
            <summary>
            The 18th day of August of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.August.The19th">
            <summary>
            The 19th day of August of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.August.The20th">
            <summary>
            The 20th day of August of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.August.The21st">
            <summary>
            The 21st day of August of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.August.The22nd">
            <summary>
            The 22nd day of August of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.August.The23rd">
            <summary>
            The 23rd day of August of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.August.The24th">
            <summary>
            The 24th day of August of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.August.The25th">
            <summary>
            The 25th day of August of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.August.The26th">
            <summary>
            The 26th day of August of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.August.The27th">
            <summary>
            The 27th day of August of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.August.The28th">
            <summary>
            The 28th day of August of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.August.The29th">
            <summary>
            The 29th day of August of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.August.The30th">
            <summary>
            The 30th day of August of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.August.The31st">
            <summary>
            The 31st day of August of the current year
            </summary>
        </member>
        <member name="T:Humanizer.On.September">
            <summary>
            Provides fluent date accessors for September
            </summary>
        </member>
        <member name="M:Humanizer.On.September.The(System.Int32)">
            <summary>
            The nth day of September of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.September.The1st">
            <summary>
            The 1st day of September of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.September.The2nd">
            <summary>
            The 2nd day of September of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.September.The3rd">
            <summary>
            The 3rd day of September of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.September.The4th">
            <summary>
            The 4th day of September of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.September.The5th">
            <summary>
            The 5th day of September of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.September.The6th">
            <summary>
            The 6th day of September of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.September.The7th">
            <summary>
            The 7th day of September of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.September.The8th">
            <summary>
            The 8th day of September of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.September.The9th">
            <summary>
            The 9th day of September of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.September.The10th">
            <summary>
            The 10th day of September of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.September.The11th">
            <summary>
            The 11th day of September of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.September.The12th">
            <summary>
            The 12th day of September of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.September.The13th">
            <summary>
            The 13th day of September of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.September.The14th">
            <summary>
            The 14th day of September of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.September.The15th">
            <summary>
            The 15th day of September of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.September.The16th">
            <summary>
            The 16th day of September of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.September.The17th">
            <summary>
            The 17th day of September of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.September.The18th">
            <summary>
            The 18th day of September of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.September.The19th">
            <summary>
            The 19th day of September of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.September.The20th">
            <summary>
            The 20th day of September of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.September.The21st">
            <summary>
            The 21st day of September of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.September.The22nd">
            <summary>
            The 22nd day of September of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.September.The23rd">
            <summary>
            The 23rd day of September of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.September.The24th">
            <summary>
            The 24th day of September of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.September.The25th">
            <summary>
            The 25th day of September of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.September.The26th">
            <summary>
            The 26th day of September of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.September.The27th">
            <summary>
            The 27th day of September of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.September.The28th">
            <summary>
            The 28th day of September of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.September.The29th">
            <summary>
            The 29th day of September of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.September.The30th">
            <summary>
            The 30th day of September of the current year
            </summary>
        </member>
        <member name="T:Humanizer.On.October">
            <summary>
            Provides fluent date accessors for October
            </summary>
        </member>
        <member name="M:Humanizer.On.October.The(System.Int32)">
            <summary>
            The nth day of October of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.October.The1st">
            <summary>
            The 1st day of October of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.October.The2nd">
            <summary>
            The 2nd day of October of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.October.The3rd">
            <summary>
            The 3rd day of October of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.October.The4th">
            <summary>
            The 4th day of October of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.October.The5th">
            <summary>
            The 5th day of October of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.October.The6th">
            <summary>
            The 6th day of October of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.October.The7th">
            <summary>
            The 7th day of October of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.October.The8th">
            <summary>
            The 8th day of October of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.October.The9th">
            <summary>
            The 9th day of October of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.October.The10th">
            <summary>
            The 10th day of October of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.October.The11th">
            <summary>
            The 11th day of October of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.October.The12th">
            <summary>
            The 12th day of October of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.October.The13th">
            <summary>
            The 13th day of October of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.October.The14th">
            <summary>
            The 14th day of October of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.October.The15th">
            <summary>
            The 15th day of October of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.October.The16th">
            <summary>
            The 16th day of October of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.October.The17th">
            <summary>
            The 17th day of October of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.October.The18th">
            <summary>
            The 18th day of October of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.October.The19th">
            <summary>
            The 19th day of October of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.October.The20th">
            <summary>
            The 20th day of October of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.October.The21st">
            <summary>
            The 21st day of October of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.October.The22nd">
            <summary>
            The 22nd day of October of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.October.The23rd">
            <summary>
            The 23rd day of October of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.October.The24th">
            <summary>
            The 24th day of October of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.October.The25th">
            <summary>
            The 25th day of October of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.October.The26th">
            <summary>
            The 26th day of October of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.October.The27th">
            <summary>
            The 27th day of October of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.October.The28th">
            <summary>
            The 28th day of October of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.October.The29th">
            <summary>
            The 29th day of October of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.October.The30th">
            <summary>
            The 30th day of October of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.October.The31st">
            <summary>
            The 31st day of October of the current year
            </summary>
        </member>
        <member name="T:Humanizer.On.November">
            <summary>
            Provides fluent date accessors for November
            </summary>
        </member>
        <member name="M:Humanizer.On.November.The(System.Int32)">
            <summary>
            The nth day of November of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.November.The1st">
            <summary>
            The 1st day of November of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.November.The2nd">
            <summary>
            The 2nd day of November of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.November.The3rd">
            <summary>
            The 3rd day of November of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.November.The4th">
            <summary>
            The 4th day of November of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.November.The5th">
            <summary>
            The 5th day of November of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.November.The6th">
            <summary>
            The 6th day of November of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.November.The7th">
            <summary>
            The 7th day of November of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.November.The8th">
            <summary>
            The 8th day of November of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.November.The9th">
            <summary>
            The 9th day of November of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.November.The10th">
            <summary>
            The 10th day of November of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.November.The11th">
            <summary>
            The 11th day of November of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.November.The12th">
            <summary>
            The 12th day of November of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.November.The13th">
            <summary>
            The 13th day of November of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.November.The14th">
            <summary>
            The 14th day of November of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.November.The15th">
            <summary>
            The 15th day of November of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.November.The16th">
            <summary>
            The 16th day of November of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.November.The17th">
            <summary>
            The 17th day of November of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.November.The18th">
            <summary>
            The 18th day of November of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.November.The19th">
            <summary>
            The 19th day of November of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.November.The20th">
            <summary>
            The 20th day of November of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.November.The21st">
            <summary>
            The 21st day of November of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.November.The22nd">
            <summary>
            The 22nd day of November of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.November.The23rd">
            <summary>
            The 23rd day of November of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.November.The24th">
            <summary>
            The 24th day of November of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.November.The25th">
            <summary>
            The 25th day of November of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.November.The26th">
            <summary>
            The 26th day of November of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.November.The27th">
            <summary>
            The 27th day of November of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.November.The28th">
            <summary>
            The 28th day of November of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.November.The29th">
            <summary>
            The 29th day of November of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.November.The30th">
            <summary>
            The 30th day of November of the current year
            </summary>
        </member>
        <member name="T:Humanizer.On.December">
            <summary>
            Provides fluent date accessors for December
            </summary>
        </member>
        <member name="M:Humanizer.On.December.The(System.Int32)">
            <summary>
            The nth day of December of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.December.The1st">
            <summary>
            The 1st day of December of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.December.The2nd">
            <summary>
            The 2nd day of December of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.December.The3rd">
            <summary>
            The 3rd day of December of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.December.The4th">
            <summary>
            The 4th day of December of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.December.The5th">
            <summary>
            The 5th day of December of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.December.The6th">
            <summary>
            The 6th day of December of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.December.The7th">
            <summary>
            The 7th day of December of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.December.The8th">
            <summary>
            The 8th day of December of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.December.The9th">
            <summary>
            The 9th day of December of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.December.The10th">
            <summary>
            The 10th day of December of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.December.The11th">
            <summary>
            The 11th day of December of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.December.The12th">
            <summary>
            The 12th day of December of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.December.The13th">
            <summary>
            The 13th day of December of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.December.The14th">
            <summary>
            The 14th day of December of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.December.The15th">
            <summary>
            The 15th day of December of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.December.The16th">
            <summary>
            The 16th day of December of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.December.The17th">
            <summary>
            The 17th day of December of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.December.The18th">
            <summary>
            The 18th day of December of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.December.The19th">
            <summary>
            The 19th day of December of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.December.The20th">
            <summary>
            The 20th day of December of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.December.The21st">
            <summary>
            The 21st day of December of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.December.The22nd">
            <summary>
            The 22nd day of December of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.December.The23rd">
            <summary>
            The 23rd day of December of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.December.The24th">
            <summary>
            The 24th day of December of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.December.The25th">
            <summary>
            The 25th day of December of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.December.The26th">
            <summary>
            The 26th day of December of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.December.The27th">
            <summary>
            The 27th day of December of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.December.The28th">
            <summary>
            The 28th day of December of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.December.The29th">
            <summary>
            The 29th day of December of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.December.The30th">
            <summary>
            The 30th day of December of the current year
            </summary>
        </member>
        <member name="P:Humanizer.On.December.The31st">
            <summary>
            The 31st day of December of the current year
            </summary>
        </member>
        <member name="T:Humanizer.Localisation.ResourceKeys">
            <summary>
            
            </summary>
        </member>
        <member name="T:Humanizer.Localisation.ResourceKeys.DateHumanize">
            <summary>
            Encapsulates the logic required to get the resource keys for DateTime.Humanize
            </summary>
        </member>
        <member name="F:Humanizer.Localisation.ResourceKeys.DateHumanize.Now">
            <summary>
            Resource key for Now.
            </summary>
        </member>
        <member name="F:Humanizer.Localisation.ResourceKeys.DateHumanize.DateTimeFormat">
            <summary>
            Examples: DateHumanize_SingleMinuteAgo, DateHumanize_MultipleHoursAgo
            Note: "s" for plural served separately by third part.
            </summary>
        </member>
        <member name="M:Humanizer.Localisation.ResourceKeys.DateHumanize.GetResourceKey(Humanizer.Localisation.TimeUnit,Humanizer.Localisation.Tense,System.Int32)">
            <summary>
            Generates Resource Keys accordning to convention.
            </summary>
            <param name="timeUnit">Time unit</param>
            <param name="timeUnitTense">Is time unit in future or past</param>
            <param name="count">Number of units, default is One.</param>
            <returns>Resource key, like DateHumanize_SingleMinuteAgo</returns>
        </member>
        <member name="T:Humanizer.Localisation.ResourceKeys.TimeSpanHumanize">
            <summary>
            Encapsulates the logic required to get the resource keys for TimeSpan.Humanize
            </summary>
        </member>
        <member name="F:Humanizer.Localisation.ResourceKeys.TimeSpanHumanize.TimeSpanFormat">
            <summary>
            Examples: TimeSpanHumanize_SingleMinute, TimeSpanHumanize_MultipleHours.
            Note: "s" for plural served separately by third part.
            </summary>
        </member>
        <member name="M:Humanizer.Localisation.ResourceKeys.TimeSpanHumanize.GetResourceKey(Humanizer.Localisation.TimeUnit,System.Int32)">
            <summary>
            Generates Resource Keys according to convention.
            </summary>
            <param name="unit">Time unit, <see cref="T:Humanizer.Localisation.TimeUnit"/>.</param>
            <param name="count">Number of units, default is One.</param>
            <returns>Resource key, like TimeSpanHumanize_SingleMinute</returns>
        </member>
        <member name="T:Humanizer.Localisation.TimeUnit">
            <summary>
            Units of time.
            </summary>
        </member>
        <member name="T:Humanizer.OnNoMatch">
            <summary>
            Dictating what should be done when a match is not found - currently used only for DehumanizeTo
            </summary>
        </member>
        <member name="F:Humanizer.OnNoMatch.ThrowsException">
            <summary>
            This is the default behavior which throws a NoMatchFoundException
            </summary>
        </member>
        <member name="F:Humanizer.OnNoMatch.ReturnsNull">
            <summary>
            If set to ReturnsNull the method returns null instead of throwing an exception
            </summary>
        </member>
        <member name="T:Humanizer.NoMatchFoundException">
            <summary>
            This is thrown on String.DehumanizeTo enum when the provided string cannot be mapped to the target enum
            </summary>
        </member>
        <member name="T:Humanizer.RomanNumeralExtensions">
            <summary>
            Contains extension methods for changing a number to Roman representation (ToRoman) and from Roman representation back to the number (FromRoman)
            </summary>
        </member>
        <member name="M:Humanizer.RomanNumeralExtensions.FromRoman(System.String)">
            <summary>
            Converts Roman numbers into integer
            </summary>
            <param name="input">Roman number</param>
            <returns>Human-readable number</returns>
        </member>
        <member name="M:Humanizer.RomanNumeralExtensions.ToRoman(System.Int32)">
            <summary>
            Converts the input to Roman number
            </summary>
            <param name="input">Integer input</param>
            <returns>Roman number</returns>
        </member>
        <member name="T:Humanizer.StringExtensions">
            <summary>
            Extension methods for String type.
            </summary>
        </member>
        <member name="M:Humanizer.StringExtensions.FormatWith(System.String,System.Object[])">
            <summary>
            Extension method to format string with passed arguments. Current thread's current culture is used
            </summary>
            <param name="format">string format</param>
            <param name="args">arguments</param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.StringExtensions.FormatWith(System.String,System.IFormatProvider,System.Object[])">
            <summary>
            Extension method to format string with passed arguments using specified format provider (i.e. CultureInfo)
            </summary>
            <param name="format">string format</param>
            <param name="provider">An object that supplies culture-specific formatting information</param>
            <param name="args">arguments</param>
            <returns></returns>
        </member>
        <member name="T:Humanizer.ShowQuantityAs">
            <summary>
            Enumerates the ways of displaying a quantity value when converting
            a word to a quantity string.
            </summary>
        </member>
        <member name="F:Humanizer.ShowQuantityAs.None">
            <summary>
            Indicates that no quantity will be included in the formatted string.
            </summary>
        </member>
        <member name="F:Humanizer.ShowQuantityAs.Numeric">
            <summary>
            Indicates that the quantity will be included in the output, formatted
            as its numeric value (e.g. "1").
            </summary>
        </member>
        <member name="F:Humanizer.ShowQuantityAs.Words">
            <summary>
            Incidates that the quantity will be included in the output, formatted as
            words (e.g. 123 => "one hundred and twenty three").
            </summary>
        </member>
        <member name="T:Humanizer.ToQuantityExtensions">
            <summary>
            Provides extensions for formatting a <see cref="T:System.String"/> word as a quantity.
            </summary>
        </member>
        <member name="M:Humanizer.ToQuantityExtensions.ToQuantity(System.String,System.Int32,Humanizer.ShowQuantityAs)">
            <summary>
            Prefixes the provided word with the number and accordingly pluralizes or singularizes the word
            </summary>
            <param name="input">The word to be prefixed</param>
            <param name="quantity">The quantity of the word</param>
            <param name="showQuantityAs">How to show the quantity. Numeric by default</param>
            <example>
            "request".ToQuantity(0) => "0 requests"
            "request".ToQuantity(1) => "1 request"
            "request".ToQuantity(2) => "2 requests"
            "men".ToQuantity(2) => "2 men"
            "process".ToQuantity(1200, ShowQuantityAs.Words) => "one thousand two hundred processes"
            </example>
            <returns></returns>
        </member>
        <member name="M:Humanizer.ToQuantityExtensions.ToQuantity(System.String,System.Int32,System.String,System.IFormatProvider)">
            <summary>
            Prefixes the provided word with the number and accordingly pluralizes or singularizes the word
            </summary>
            <param name="input">The word to be prefixed</param>
            <param name="quantity">The quantity of the word</param>
            <param name="format">A standard or custom numeric format string.</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information.</param>
            <example>
            "request".ToQuantity(0) => "0 requests"
            "request".ToQuantity(10000, format: "N0") => "10,000 requests"
            "request".ToQuantity(1, format: "N0") => "1 request"
            </example>
            <returns></returns>
        </member>
        <member name="T:Humanizer.To">
            <summary>
            A portal to string transformation using IStringTransformer
            </summary>
        </member>
        <member name="M:Humanizer.To.Transform(System.String,Humanizer.IStringTransformer[])">
            <summary>
            Transforms a string using the provided transformers. Transformations are applied in the provided order.
            </summary>
            <param name="input"></param>
            <param name="transformers"></param>
            <returns></returns>
        </member>
        <member name="P:Humanizer.To.TitleCase">
            <summary>
            Changes string to title case
            </summary>
            <example>
            "INvalid caSEs arE corrected" -> "Invalid Cases Are Corrected"
            </example>
        </member>
        <member name="P:Humanizer.To.LowerCase">
            <summary>
            Changes the string to lower case
            </summary>
            <example>
            "Sentence casing" -> "sentence casing"
            </example>
        </member>
        <member name="P:Humanizer.To.UpperCase">
            <summary>
            Changes the string to upper case
            </summary>
            <example>
            "lower case statement" -> "LOWER CASE STATEMENT"
            </example>
        </member>
        <member name="P:Humanizer.To.SentenceCase">
            <summary>
            Changes the string to sentence case
            </summary>
            <example>
            "lower case statement" -> "Lower case statement"
            </example>
        </member>
        <member name="T:Humanizer.IStringTransformer">
            <summary>
            Can tranform a string
            </summary>
        </member>
        <member name="M:Humanizer.IStringTransformer.Transform(System.String)">
            <summary>
            Transform the input
            </summary>
            <param name="input">String to be transformed</param>
            <returns></returns>
        </member>
        <member name="T:Humanizer.EnumDehumanizeExtensions">
            <summary>
            Contains extension methods for dehumanizing Enum string values.
            </summary>
        </member>
        <member name="M:Humanizer.EnumDehumanizeExtensions.DehumanizeTo``1(System.String)">
            <summary>
            Dehumanizes a string into the Enum it was originally Humanized from!
            </summary>
            <typeparam name="TTargetEnum">The target enum</typeparam>
            <param name="input">The string to be converted</param>
            <exception cref="T:System.ArgumentException">If TTargetEnum is not an enum</exception>
            <exception cref="T:Humanizer.NoMatchFoundException">Couldn't find any enum member that matches the string</exception>
            <returns></returns>
        </member>
        <member name="M:Humanizer.EnumDehumanizeExtensions.DehumanizeTo(System.String,System.Type,Humanizer.OnNoMatch)">
            <summary>
            Dehumanizes a string into the Enum it was originally Humanized from!
            </summary>
            <param name="input">The string to be converted</param>
            <param name="targetEnum">The target enum</param>
            <param name="onNoMatch">What to do when input is not matched to the enum.</param>
            <returns></returns>
            <exception cref="T:Humanizer.NoMatchFoundException">Couldn't find any enum member that matches the string</exception>
            <exception cref="T:System.ArgumentException">If targetEnum is not an enum</exception>
        </member>
        <member name="T:Humanizer.EnumHumanizeExtensions">
            <summary>
            Contains extension methods for humanizing Enums
            </summary>
        </member>
        <member name="M:Humanizer.EnumHumanizeExtensions.Humanize(System.Enum)">
            <summary>
            Turns an enum member into a human readable string; e.g. AnonymousUser -> Anonymous user. It also honors DescriptionAttribute data annotation
            </summary>
            <param name="input">The enum member to be humanized</param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.EnumHumanizeExtensions.Humanize(System.Enum,Humanizer.LetterCasing)">
            <summary>
            Turns an enum member into a human readable string with the provided casing; e.g. AnonymousUser with Title casing -> Anonymous User. It also honors DescriptionAttribute data annotation
            </summary>
            <param name="input">The enum member to be humanized</param>
            <param name="casing">The casing to use for humanizing the enum member</param>
            <returns></returns>
        </member>
        <member name="T:Humanizer.PrepositionsExtensions">
            <summary>
            <see cref="T:System.DateTime"/> extensions related to spacial or temporal relations
            </summary>
        </member>
        <member name="M:Humanizer.PrepositionsExtensions.At(System.DateTime,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns a new <see cref="T:System.DateTime"/> with the specifed hour and, optionally
            provided minutes, seconds, and milliseconds.
            </summary>
        </member>
        <member name="M:Humanizer.PrepositionsExtensions.AtMidnight(System.DateTime)">
            <summary>
            Returns a new instance of DateTime based on the provided date where the time is set to midnight
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.PrepositionsExtensions.AtNoon(System.DateTime)">
            <summary>
            Returns a new instance of DateTime based on the provided date where the time is set to noon
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.PrepositionsExtensions.In(System.DateTime,System.Int32)">
            <summary>
            Returns a new instance of DateTime based on the provided date where the year is set to the provided year
            </summary>
            <param name="date"></param>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="T:Humanizer.Localisation.Resources">
            <summary>
            Provides access to the resources of Humanizer
            </summary>
        </member>
        <member name="M:Humanizer.Localisation.Resources.GetResource(System.String,System.Globalization.CultureInfo)">
            <summary>
            Returns the value of the specified string resource
            </summary>
            <param name="resourceKey">The name of the resource to retrieve.</param>
            <param name="culture">The culture of the resource to retrieve. If not specified, current thread's UI culture is used.</param>
            <returns>The value of the resource localized for the specified culture.</returns>
        </member>
        <member name="T:Humanizer.NumberToTimeSpanExtensions">
            <summary>
            Number to TimeSpan extensions
            </summary>
        </member>
        <member name="M:Humanizer.NumberToTimeSpanExtensions.Milliseconds(System.Byte)">
            <summary>
            5.Milliseconds() == TimeSpan.FromMilliseconds(5) 
            </summary>
            <param name="ms"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.NumberToTimeSpanExtensions.Milliseconds(System.SByte)">
            <summary>
            5.Milliseconds() == TimeSpan.FromMilliseconds(5) 
            </summary>
            <param name="ms"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.NumberToTimeSpanExtensions.Milliseconds(System.Int16)">
            <summary>
            5.Milliseconds() == TimeSpan.FromMilliseconds(5) 
            </summary>
            <param name="ms"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.NumberToTimeSpanExtensions.Milliseconds(System.UInt16)">
            <summary>
            5.Milliseconds() == TimeSpan.FromMilliseconds(5) 
            </summary>
            <param name="ms"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.NumberToTimeSpanExtensions.Milliseconds(System.Int32)">
            <summary>
            5.Milliseconds() == TimeSpan.FromMilliseconds(5) 
            </summary>
            <param name="ms"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.NumberToTimeSpanExtensions.Milliseconds(System.UInt32)">
            <summary>
            5.Milliseconds() == TimeSpan.FromMilliseconds(5) 
            </summary>
            <param name="ms"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.NumberToTimeSpanExtensions.Milliseconds(System.Int64)">
            <summary>
            5.Milliseconds() == TimeSpan.FromMilliseconds(5) 
            </summary>
            <param name="ms"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.NumberToTimeSpanExtensions.Milliseconds(System.UInt64)">
            <summary>
            5.Milliseconds() == TimeSpan.FromMilliseconds(5) 
            </summary>
            <param name="ms"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.NumberToTimeSpanExtensions.Milliseconds(System.Double)">
            <summary>
            5.Milliseconds() == TimeSpan.FromMilliseconds(5) 
            </summary>
            <param name="ms"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.NumberToTimeSpanExtensions.Seconds(System.Byte)">
            <summary>
            5.Seconds() == TimeSpan.FromSeconds(5) 
            </summary>
            <param name="seconds"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.NumberToTimeSpanExtensions.Seconds(System.SByte)">
            <summary>
            5.Seconds() == TimeSpan.FromSeconds(5) 
            </summary>
            <param name="seconds"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.NumberToTimeSpanExtensions.Seconds(System.Int16)">
            <summary>
            5.Seconds() == TimeSpan.FromSeconds(5) 
            </summary>
            <param name="seconds"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.NumberToTimeSpanExtensions.Seconds(System.UInt16)">
            <summary>
            5.Seconds() == TimeSpan.FromSeconds(5) 
            </summary>
            <param name="seconds"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.NumberToTimeSpanExtensions.Seconds(System.Int32)">
            <summary>
            5.Seconds() == TimeSpan.FromSeconds(5) 
            </summary>
            <param name="seconds"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.NumberToTimeSpanExtensions.Seconds(System.UInt32)">
            <summary>
            5.Seconds() == TimeSpan.FromSeconds(5) 
            </summary>
            <param name="seconds"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.NumberToTimeSpanExtensions.Seconds(System.Int64)">
            <summary>
            5.Seconds() == TimeSpan.FromSeconds(5) 
            </summary>
            <param name="seconds"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.NumberToTimeSpanExtensions.Seconds(System.UInt64)">
            <summary>
            5.Seconds() == TimeSpan.FromSeconds(5) 
            </summary>
            <param name="seconds"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.NumberToTimeSpanExtensions.Seconds(System.Double)">
            <summary>
            5.Seconds() == TimeSpan.FromSeconds(5) 
            </summary>
            <param name="seconds"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.NumberToTimeSpanExtensions.Minutes(System.Byte)">
            <summary>
            4.Minutes() == TimeSpan.FromMinutes(4) 
            </summary>
            <param name="minutes"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.NumberToTimeSpanExtensions.Minutes(System.SByte)">
            <summary>
            4.Minutes() == TimeSpan.FromMinutes(4) 
            </summary>
            <param name="minutes"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.NumberToTimeSpanExtensions.Minutes(System.Int16)">
            <summary>
            4.Minutes() == TimeSpan.FromMinutes(4) 
            </summary>
            <param name="minutes"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.NumberToTimeSpanExtensions.Minutes(System.UInt16)">
            <summary>
            4.Minutes() == TimeSpan.FromMinutes(4) 
            </summary>
            <param name="minutes"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.NumberToTimeSpanExtensions.Minutes(System.Int32)">
            <summary>
            4.Minutes() == TimeSpan.FromMinutes(4) 
            </summary>
            <param name="minutes"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.NumberToTimeSpanExtensions.Minutes(System.UInt32)">
            <summary>
            4.Minutes() == TimeSpan.FromMinutes(4) 
            </summary>
            <param name="minutes"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.NumberToTimeSpanExtensions.Minutes(System.Int64)">
            <summary>
            4.Minutes() == TimeSpan.FromMinutes(4) 
            </summary>
            <param name="minutes"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.NumberToTimeSpanExtensions.Minutes(System.UInt64)">
            <summary>
            4.Minutes() == TimeSpan.FromMinutes(4) 
            </summary>
            <param name="minutes"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.NumberToTimeSpanExtensions.Minutes(System.Double)">
            <summary>
            4.Minutes() == TimeSpan.FromMinutes(4) 
            </summary>
            <param name="minutes"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.NumberToTimeSpanExtensions.Hours(System.Byte)">
            <summary>
            3.Hours() == TimeSpan.FromHours(3)
            </summary>
            <param name="hours"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.NumberToTimeSpanExtensions.Hours(System.SByte)">
            <summary>
            3.Hours() == TimeSpan.FromHours(3)
            </summary>
            <param name="hours"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.NumberToTimeSpanExtensions.Hours(System.Int16)">
            <summary>
            3.Hours() == TimeSpan.FromHours(3)
            </summary>
            <param name="hours"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.NumberToTimeSpanExtensions.Hours(System.UInt16)">
            <summary>
            3.Hours() == TimeSpan.FromHours(3)
            </summary>
            <param name="hours"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.NumberToTimeSpanExtensions.Hours(System.Int32)">
            <summary>
            3.Hours() == TimeSpan.FromHours(3)
            </summary>
            <param name="hours"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.NumberToTimeSpanExtensions.Hours(System.UInt32)">
            <summary>
            3.Hours() == TimeSpan.FromHours(3)
            </summary>
            <param name="hours"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.NumberToTimeSpanExtensions.Hours(System.Int64)">
            <summary>
            3.Hours() == TimeSpan.FromHours(3)
            </summary>
            <param name="hours"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.NumberToTimeSpanExtensions.Hours(System.UInt64)">
            <summary>
            3.Hours() == TimeSpan.FromHours(3)
            </summary>
            <param name="hours"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.NumberToTimeSpanExtensions.Hours(System.Double)">
            <summary>
            3.Hours() == TimeSpan.FromHours(3)
            </summary>
            <param name="hours"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.NumberToTimeSpanExtensions.Days(System.Byte)">
            <summary>
            2.Days() == TimeSpan.FromDays(2)
            </summary>
            <param name="days"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.NumberToTimeSpanExtensions.Days(System.SByte)">
            <summary>
            2.Days() == TimeSpan.FromDays(2)
            </summary>
            <param name="days"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.NumberToTimeSpanExtensions.Days(System.Int16)">
            <summary>
            2.Days() == TimeSpan.FromDays(2)
            </summary>
            <param name="days"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.NumberToTimeSpanExtensions.Days(System.UInt16)">
            <summary>
            2.Days() == TimeSpan.FromDays(2)
            </summary>
            <param name="days"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.NumberToTimeSpanExtensions.Days(System.Int32)">
            <summary>
            2.Days() == TimeSpan.FromDays(2)
            </summary>
            <param name="days"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.NumberToTimeSpanExtensions.Days(System.UInt32)">
            <summary>
            2.Days() == TimeSpan.FromDays(2)
            </summary>
            <param name="days"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.NumberToTimeSpanExtensions.Days(System.Int64)">
            <summary>
            2.Days() == TimeSpan.FromDays(2)
            </summary>
            <param name="days"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.NumberToTimeSpanExtensions.Days(System.UInt64)">
            <summary>
            2.Days() == TimeSpan.FromDays(2)
            </summary>
            <param name="days"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.NumberToTimeSpanExtensions.Days(System.Double)">
            <summary>
            2.Days() == TimeSpan.FromDays(2)
            </summary>
            <param name="days"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.NumberToTimeSpanExtensions.Weeks(System.Byte)">
            <summary>
            2.Weeks() == new TimeSpan(14, 0, 0, 0)
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.NumberToTimeSpanExtensions.Weeks(System.SByte)">
            <summary>
            2.Weeks() == new TimeSpan(14, 0, 0, 0)
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.NumberToTimeSpanExtensions.Weeks(System.Int16)">
            <summary>
            2.Weeks() == new TimeSpan(14, 0, 0, 0)
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.NumberToTimeSpanExtensions.Weeks(System.UInt16)">
            <summary>
            2.Weeks() == new TimeSpan(14, 0, 0, 0)
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.NumberToTimeSpanExtensions.Weeks(System.Int32)">
            <summary>
            2.Weeks() == new TimeSpan(14, 0, 0, 0)
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.NumberToTimeSpanExtensions.Weeks(System.UInt32)">
            <summary>
            2.Weeks() == new TimeSpan(14, 0, 0, 0)
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.NumberToTimeSpanExtensions.Weeks(System.Int64)">
            <summary>
            2.Weeks() == new TimeSpan(14, 0, 0, 0)
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.NumberToTimeSpanExtensions.Weeks(System.UInt64)">
            <summary>
            2.Weeks() == new TimeSpan(14, 0, 0, 0)
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.NumberToTimeSpanExtensions.Weeks(System.Double)">
            <summary>
            2.Weeks() == new TimeSpan(14, 0, 0, 0)
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:Humanizer.InflectorExtensions">
            <summary>
            Inflector extensions
            </summary>
        </member>
        <member name="M:Humanizer.InflectorExtensions.Pluralize(System.String,Humanizer.Plurality)">
            <summary>
            Pluralizes the provided input considering irregular words
            </summary>
            <param name="word">Word to be pluralized</param>
            <param name="plurality">Normally you call Pluralize on singular words; but if you're unsure call it with Plurality.CouldBeEither</param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.InflectorExtensions.Pluralize(System.String,System.Boolean)">
            <summary>
            Pluralizes the provided input considering irregular words
            </summary>
            <param name="word">Word to be pluralized</param>
            <param name="inputIsKnownToBeSingular">Normally you call Pluralize on singular words; but if you're unsure call it with false</param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.InflectorExtensions.Singularize(System.String,Humanizer.Plurality)">
            <summary>
            Singularizes the provided input considering irregular words
            </summary>
            <param name="word">Word to be singularized</param>
            <param name="plurality">Normally you call Singularize on plural words; but if you're unsure call it with Plurality.CouldBeEither</param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.InflectorExtensions.Singularize(System.String,System.Boolean)">
            <summary>
            Singularizes the provided input considering irregular words
            </summary>
            <param name="word">Word to be singularized</param>
            <param name="inputIsKnownToBePlural">Normally you call Singularize on plural words; but if you're unsure call it with false</param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.InflectorExtensions.Titleize(System.String)">
            <summary>
            Humanizes the input with Title casing
            </summary>
            <param name="input">The string to be titleized</param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.InflectorExtensions.Pascalize(System.String)">
            <summary>
            By default, pascalize converts strings to UpperCamelCase also removing underscores
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.InflectorExtensions.Camelize(System.String)">
            <summary>
            Same as Pascalize except that the first character is lower case
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.InflectorExtensions.Underscore(System.String)">
            <summary>
            Separates the input words with underscore
            </summary>
            <param name="input">The string to be underscored</param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.InflectorExtensions.Dasherize(System.String)">
            <summary>
            Replaces underscores with dashes in the string
            </summary>
            <param name="underscoredWord"></param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.InflectorExtensions.Hyphenate(System.String)">
            <summary>
            Replaces underscores with hyphens in the string
            </summary>
            <param name="underscoredWord"></param>
            <returns></returns>
        </member>
        <member name="T:Humanizer.LetterCasing">
            <summary>
            Options for specifying the desired letter casing for the output string 
            </summary>
        </member>
        <member name="F:Humanizer.LetterCasing.Title">
            <summary>
            SomeString -> Some String
            </summary>
        </member>
        <member name="F:Humanizer.LetterCasing.AllCaps">
            <summary>
            SomeString -> SOME STRING
            </summary>
        </member>
        <member name="F:Humanizer.LetterCasing.LowerCase">
            <summary>
            SomeString -> some string
            </summary>
        </member>
        <member name="F:Humanizer.LetterCasing.Sentence">
            <summary>
            SomeString -> Some string
            </summary>
        </member>
        <member name="T:Humanizer.NumberToWordsExtension">
            <summary>
            Transform a number into words; e.g. 1 => one
            </summary>
        </member>
        <member name="M:Humanizer.NumberToWordsExtension.ToWords(System.Int32,System.Globalization.CultureInfo)">
            <summary>
            3501.ToWords() -> "three thousand five hundred and one"
            </summary>
            <param name="number">Number to be turned to words</param>
            <param name="culture">Culture to use. If null, current thread's UI culture is used.</param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.NumberToWordsExtension.ToWords(System.Int32,Humanizer.GrammaticalGender,System.Globalization.CultureInfo)">
            <summary>
            For locales that support gender-specific forms
            </summary>
            <example>
            Russian:
            <code>
              1.ToWords(GrammaticalGender.Masculine) -> "один"
              1.ToWords(GrammaticalGender.Feminine) -> "одна"
            </code>
            Hebrew:
            <code>
              1.ToWords(GrammaticalGender.Masculine) -> "אחד"
              1.ToWords(GrammaticalGender.Feminine) -> "אחת"
            </code>
            </example>
            
            <param name="number">Number to be turned to words</param>
            <param name="gender">The grammatical gender to use for output words</param>
            <param name="culture">Culture to use. If null, current thread's UI culture is used.</param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.NumberToWordsExtension.ToOrdinalWords(System.Int32,System.Globalization.CultureInfo)">
            <summary>
            1.ToOrdinalWords() -> "first"
            </summary>
            <param name="number">Number to be turned to ordinal words</param>
            <param name="culture">Culture to use. If null, current thread's UI culture is used.</param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.NumberToWordsExtension.ToOrdinalWords(System.Int32,Humanizer.GrammaticalGender,System.Globalization.CultureInfo)">
            <summary>
            for Brazilian Portuguese locale
            1.ToOrdinalWords(GrammaticalGender.Masculine) -> "primeiro"
            1.ToOrdinalWords(GrammaticalGender.Feminine) -> "primeira"
            </summary>
            <param name="number">Number to be turned to words</param>
            <param name="gender">The grammatical gender to use for output words</param>
            <param name="culture">Culture to use. If null, current thread's UI culture is used.</param>
            <returns></returns>
        </member>
        <member name="T:Humanizer.OrdinalizeExtensions">
            <summary>
            Ordinalize extensions
            </summary>
        </member>
        <member name="M:Humanizer.OrdinalizeExtensions.Ordinalize(System.String)">
            <summary>
            Turns a number into an ordinal string used to denote the position in an ordered sequence such as 1st, 2nd, 3rd, 4th.
            </summary>
            <param name="numberString">The number, in string, to be ordinalized</param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.OrdinalizeExtensions.Ordinalize(System.String,Humanizer.GrammaticalGender)">
            <summary>
            Turns a number into an ordinal string used to denote the position in an ordered sequence such as 1st, 2nd, 3rd, 4th.
            Gender for Brazilian Portuguese locale
            "1".Ordinalize(GrammaticalGender.Masculine) -> "1º"
            "1".Ordinalize(GrammaticalGender.Feminine) -> "1ª"
            </summary>
            <param name="numberString">The number, in string, to be ordinalized</param>
            <param name="gender">The grammatical gender to use for output words</param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.OrdinalizeExtensions.Ordinalize(System.Int32)">
            <summary>
            Turns a number into an ordinal number used to denote the position in an ordered sequence such as 1st, 2nd, 3rd, 4th.
            </summary>
            <param name="number">The number to be ordinalized</param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.OrdinalizeExtensions.Ordinalize(System.Int32,Humanizer.GrammaticalGender)">
            <summary>
            Turns a number into an ordinal number used to denote the position in an ordered sequence such as 1st, 2nd, 3rd, 4th.
            Gender for Brazilian Portuguese locale
            1.Ordinalize(GrammaticalGender.Masculine) -> "1º"
            1.Ordinalize(GrammaticalGender.Feminine) -> "1ª"
            </summary>
            <param name="number">The number to be ordinalized</param>
            <param name="gender">The grammatical gender to use for output words</param>
            <returns></returns>
        </member>
        <member name="T:Humanizer.StringDehumanizeExtensions">
            <summary>
            Contains extension methods for dehumanizing strings.
            </summary>
        </member>
        <member name="M:Humanizer.StringDehumanizeExtensions.Dehumanize(System.String)">
            <summary>
            Dehumanizes a string; e.g. 'some string', 'Some String', 'Some string' -> 'SomeString'
            </summary>
            <param name="input">The string to be dehumanized</param>
            <returns></returns>
        </member>
        <member name="T:Humanizer.StringHumanizeExtensions">
            <summary>
            Contains extension methods for humanizing string values.
            </summary>
        </member>
        <member name="M:Humanizer.StringHumanizeExtensions.Humanize(System.String)">
            <summary>
            Humanizes the input string; e.g. Underscored_input_String_is_turned_INTO_sentence -> 'Underscored input String is turned INTO sentence'
            </summary>
            <param name="input">The string to be humanized</param>
            <returns></returns>
        </member>
        <member name="M:Humanizer.StringHumanizeExtensions.Humanize(System.String,Humanizer.LetterCasing)">
            <summary>
            Humanized the input string based on the provided casing
            </summary>
            <param name="input">The string to be humanized</param>
            <param name="casing">The desired casing for the output</param>
            <returns></returns>
        </member>
        <member name="T:Humanizer.FixedLengthTruncator">
            <summary>
            Truncate a string to a fixed length
            </summary>
        </member>
        <member name="T:Humanizer.ITruncator">
            <summary>
            Can truncate a string.
            </summary>
        </member>
        <member name="M:Humanizer.ITruncator.Truncate(System.String,System.Int32,System.String,Humanizer.TruncateFrom)">
            <summary>
            Truncate a string
            </summary>
            <param name="value">The string to truncate</param>
            <param name="length">The length to truncate to</param>
            <param name="truncationString">The string used to truncate with</param>
            <param name="truncateFrom">The enum value used to determine from where to truncate the string</param>
            <returns>The truncated string</returns>
        </member>
        <member name="T:Humanizer.FixedNumberOfCharactersTruncator">
            <summary>
            Truncate a string to a fixed number of letters or digits
            </summary>
        </member>
        <member name="T:Humanizer.FixedNumberOfWordsTruncator">
            <summary>
            Truncate a string to a fixed number of words
            </summary>
        </member>
        <member name="T:Humanizer.TruncateExtensions">
            <summary>
            Allow strings to be truncated
            </summary>
        </member>
        <member name="M:Humanizer.TruncateExtensions.Truncate(System.String,System.Int32)">
            <summary>
            Truncate the string
            </summary>
            <param name="input">The string to be truncated</param>
            <param name="length">The length to truncate to</param>
            <returns>The truncated string</returns>
        </member>
        <member name="M:Humanizer.TruncateExtensions.Truncate(System.String,System.Int32,Humanizer.ITruncator,Humanizer.TruncateFrom)">
            <summary>
            Truncate the string
            </summary>
            <param name="input">The string to be truncated</param>
            <param name="length">The length to truncate to</param>
            <param name="truncator">The truncate to use</param>
            <param name="from">The enum value used to determine from where to truncate the string</param>
            <returns>The truncated string</returns>
        </member>
        <member name="M:Humanizer.TruncateExtensions.Truncate(System.String,System.Int32,System.String,Humanizer.TruncateFrom)">
            <summary>
            Truncate the string
            </summary>
            <param name="input">The string to be truncated</param>
            <param name="length">The length to truncate to</param>
            <param name="truncationString">The string used to truncate with</param>
            <param name="from">The enum value used to determine from where to truncate the string</param>
            <returns>The truncated string</returns>
        </member>
        <member name="M:Humanizer.TruncateExtensions.Truncate(System.String,System.Int32,System.String,Humanizer.ITruncator,Humanizer.TruncateFrom)">
            <summary>
            Truncate the string
            </summary>
            <param name="input">The string to be truncated</param>
            <param name="length">The length to truncate to</param>
            <param name="truncationString">The string used to truncate with</param>
            <param name="truncator">The truncator to use</param>
            <param name="from">The enum value used to determine from where to truncate the string</param>
            <returns>The truncated string</returns>
        </member>
        <member name="T:Humanizer.TruncateFrom">
            <summary>
            Truncation location for humanizer
            </summary>
        </member>
        <member name="F:Humanizer.TruncateFrom.Left">
            <summary>
            Truncate letters from the left (start) of the string
            </summary>
        </member>
        <member name="F:Humanizer.TruncateFrom.Right">
            <summary>
            Truncate letters from the right (end) of the string
            </summary>
        </member>
        <member name="T:Humanizer.Truncator">
            <summary>
            Gets a ITruncator
            </summary>
        </member>
        <member name="P:Humanizer.Truncator.FixedLength">
            <summary>
            Fixed length truncator
            </summary>
        </member>
        <member name="P:Humanizer.Truncator.FixedNumberOfCharacters">
            <summary>
            Fixed number of characters truncator
            </summary>
        </member>
        <member name="P:Humanizer.Truncator.FixedNumberOfWords">
            <summary>
            Fixed number of words truncator
            </summary>
        </member>
    </members>
</doc>
