<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Nancy.Hosting.Self</name>
    </assembly>
    <members>
        <member name="T:Nancy.Hosting.Self.IgnoredHeaders">
            <summary>
                A helper class that checks for a header against a list of headers that should be ignored
                when populating the headers of an <see cref="T:System.Net.HttpListenerResponse"/> object.
            </summary>
        </member>
        <member name="M:Nancy.Hosting.Self.IgnoredHeaders.IsIgnored(System.String)">
            <summary>
                Determines if a header is ignored when populating the headers of an
                <see cref="T:System.Net.HttpListenerResponse"/> object.
            </summary>
            <param name="headerName">The name of the header.</param>
            <returns><c>true</c> if the header is ignored; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Nancy.Hosting.Self.UrlReservations">
            <summary>
            Configuration for automatic url reservation creation
            </summary>
        </member>
        <member name="P:Nancy.Hosting.Self.UrlReservations.CreateAutomatically">
            <summary>
            Gets or sets a value indicating whether url reservations
            are automatically created when necessary.
            Defaults to false.
            </summary>
        </member>
        <member name="P:Nancy.Hosting.Self.UrlReservations.User">
            <summary>
            Gets or sets a value for the user to use to create the url reservations for.
            Defaults to the "Everyone" group.
            </summary>
        </member>
        <member name="T:Nancy.Hosting.Self.UacHelper">
            <summary>
            Helpers for UAC
            </summary>
        </member>
        <member name="M:Nancy.Hosting.Self.UacHelper.RunElevated(System.String,System.String)">
            <summary>
            Run an executable elevated
            </summary>
            <param name="file">File to execute</param>
            <param name="args">Arguments to pass to the executable</param>
            <returns>True if successful, false otherwise</returns>
        </member>
        <member name="T:Nancy.Hosting.Self.HostConfiguration">
            <summary>
            Host configuration for the self host
            </summary>
        </member>
        <member name="P:Nancy.Hosting.Self.HostConfiguration.RewriteLocalhost">
            <summary>
            Gets or sets a property that determines if localhost uris are 
            rewritten to htp://+:port/ style uris to allow for listening on 
            all ports, but requiring either a url reservation, or admin
            access
            Defaults to true.
            </summary>
        </member>
        <member name="P:Nancy.Hosting.Self.HostConfiguration.UrlReservations">
            <summary>
            Configuration around automatically creating url reservations
            </summary>
        </member>
        <member name="P:Nancy.Hosting.Self.HostConfiguration.AllowChunkedEncoding">
            <summary>
            Gets or sets a property that determines if Transfer-Encoding: Chunked is allowed
            for the response instead of Content-Length (default: true).
            </summary>
        </member>
        <member name="P:Nancy.Hosting.Self.HostConfiguration.UnhandledExceptionCallback">
            <summary>
            Gets or sets a property that provides a callback to be called
            if there's an unhandled exception in the self host.
            Note: this will *not* be called for normal nancy Exceptions
            that are handled by the Nancy handlers.
            Defaults to writing to debug out.
            </summary>
        </member>
        <member name="P:Nancy.Hosting.Self.HostConfiguration.EnableClientCertificates">
            <summary>
            Gets or sets a property that determines whether client certificates
            are enabled or not.
            When set to true the self host will request a client certificate if the 
            request is running over SSL.
            Defaults to false.
            </summary>
        </member>
        <member name="P:Nancy.Hosting.Self.HostConfiguration.AllowAuthorityFallback">
            <summary>
            Gets or sets a property determining if base uri matching can fall back to just
            using Authority (Schema + Host + Port) as base uri if it cannot match anything in
            the known list. This should only be set to True if you have issues with port forwarding
            (e.g. on Azure).
            </summary>
        </member>
        <member name="T:Nancy.Hosting.Self.NancyHost">
            <summary>
            Allows to host Nancy server inside any application - console or windows service.
            </summary>
            <remarks>
            NancyHost uses <see cref="T:System.Net.HttpListener"/> internally. Therefore, it requires full .net 4.0 profile (not client profile)
            to run. <see cref="M:Nancy.Hosting.Self.NancyHost.Start"/> will launch a thread that will listen for requests and then process them. Each request is processed in
            its own execution thread. NancyHost needs <see cref="T:System.SerializableAttribute"/> in order to be used from another appdomain under
            mono. Working with AppDomains is necessary if you want to unload the dependencies that come with NancyHost.
            </remarks>
        </member>
        <member name="M:Nancy.Hosting.Self.NancyHost.#ctor(System.Uri[])">
            <summary>
            Initializes a new instance of the <see cref="T:Nancy.Hosting.Self.NancyHost"/> class for the specified <paramref name="baseUris"/>.
            Uses the default configuration
            </summary>
            <param name="baseUris">The <see cref="T:System.Uri"/>s that the host will listen to.</param>
        </member>
        <member name="M:Nancy.Hosting.Self.NancyHost.#ctor(Nancy.Hosting.Self.HostConfiguration,System.Uri[])">
            <summary>
            Initializes a new instance of the <see cref="T:Nancy.Hosting.Self.NancyHost"/> class for the specified <paramref name="baseUris"/>.
            Uses the specified configuration.
            </summary>
            <param name="baseUris">The <see cref="T:System.Uri"/>s that the host will listen to.</param>
            <param name="configuration">Configuration to use</param>
        </member>
        <member name="M:Nancy.Hosting.Self.NancyHost.#ctor(Nancy.Bootstrapper.INancyBootstrapper,System.Uri[])">
            <summary>
            Initializes a new instance of the <see cref="T:Nancy.Hosting.Self.NancyHost"/> class for the specified <paramref name="baseUris"/>, using
            the provided <paramref name="bootstrapper"/>.
            Uses the default configuration
            </summary>
            <param name="bootstrapper">The bootstrapper that should be used to handle the request.</param>
            <param name="baseUris">The <see cref="T:System.Uri"/>s that the host will listen to.</param>
        </member>
        <member name="M:Nancy.Hosting.Self.NancyHost.#ctor(Nancy.Bootstrapper.INancyBootstrapper,Nancy.Hosting.Self.HostConfiguration,System.Uri[])">
            <summary>
            Initializes a new instance of the <see cref="T:Nancy.Hosting.Self.NancyHost"/> class for the specified <paramref name="baseUris"/>, using
            the provided <paramref name="bootstrapper"/>.
            Uses the specified configuration.
            </summary>
            <param name="bootstrapper">The bootstrapper that should be used to handle the request.</param>
            <param name="configuration">Configuration to use</param>
            <param name="baseUris">The <see cref="T:System.Uri"/>s that the host will listen to.</param>
        </member>
        <member name="M:Nancy.Hosting.Self.NancyHost.#ctor(System.Uri,Nancy.Bootstrapper.INancyBootstrapper)">
            <summary>
            Initializes a new instance of the <see cref="T:Nancy.Hosting.Self.NancyHost"/> class for the specified <paramref name="baseUri"/>, using
            the provided <paramref name="bootstrapper"/>.
            Uses the default configuration
            </summary>
            <param name="baseUri">The <see cref="T:System.Uri"/> that the host will listen to.</param>
            <param name="bootstrapper">The bootstrapper that should be used to handle the request.</param>
        </member>
        <member name="M:Nancy.Hosting.Self.NancyHost.#ctor(System.Uri,Nancy.Bootstrapper.INancyBootstrapper,Nancy.Hosting.Self.HostConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Nancy.Hosting.Self.NancyHost"/> class for the specified <paramref name="baseUri"/>, using
            the provided <paramref name="bootstrapper"/>.
            Uses the specified configuration.
            </summary>
            <param name="baseUri">The <see cref="T:System.Uri"/> that the host will listen to.</param>
            <param name="bootstrapper">The bootstrapper that should be used to handle the request.</param>
            <param name="configuration">Configuration to use</param>
        </member>
        <member name="M:Nancy.Hosting.Self.NancyHost.Dispose">
            <summary>
            Stops the host if it is running.
            </summary>
        </member>
        <member name="M:Nancy.Hosting.Self.NancyHost.Start">
            <summary>
            Start listening for incoming requests with the given configuration
            </summary>
        </member>
        <member name="M:Nancy.Hosting.Self.NancyHost.Stop">
            <summary>
            Stop listening for incoming requests.
            </summary>
        </member>
        <member name="T:Nancy.Hosting.Self.NetSh">
            <summary>
            Executes NetSh commands
            </summary>
        </member>
        <member name="M:Nancy.Hosting.Self.NetSh.AddUrlAcl(System.String,System.String)">
            <summary>
            Add a url reservation
            </summary>
            <param name="url">Url to add</param>
            <param name="user">User to add the reservation for</param>
            <returns>True if successful, false otherwise.</returns>
        </member>
        <member name="T:Nancy.Hosting.Self.AutomaticUrlReservationCreationFailureException">
            <summary>
            Exception for when automatic address reservation creation fails.
            Provides the user with manual instructions.
            </summary>
        </member>
        <member name="P:Nancy.Hosting.Self.AutomaticUrlReservationCreationFailureException.Message">
            <summary>
            Gets a message that describes the current exception.
            </summary>
            <returns>
            The error message that explains the reason for the exception, or an empty string("").
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="T:Nancy.Hosting.Self.UriExtensions">
            <summary>
            Extension methods for working with <see cref="T:System.Uri"/> instances.
            </summary>
        </member>
    </members>
</doc>
