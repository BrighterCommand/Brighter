// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SampleCommand.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Brighter.Example.Messages {

  /// <summary>Holder for reflection information generated from SampleCommand.proto</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class SampleCommandReflection {

    #region Descriptor
    /// <summary>File descriptor for SampleCommand.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SampleCommandReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNTYW1wbGVDb21tYW5kLnByb3RvEg9CcmlnaHRlckV4YW1wbGUiPwoNU2Ft",
            "cGxlQ29tbWFuZBIYChBDb21tYW5kUGFyYW1ldGVyGAEgASgJEhQKDENvbW1h",
            "bmRWYWx1ZRgCIAEoAkIcqgIZQnJpZ2h0ZXIuRXhhbXBsZS5NZXNzYWdlc2IG",
            "cHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedCodeInfo(null, new pbr::GeneratedCodeInfo[] {
            new pbr::GeneratedCodeInfo(typeof(global::Brighter.Example.Messages.SampleCommand), global::Brighter.Example.Messages.SampleCommand.Parser, new[]{ "CommandParameter", "CommandValue" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///  This message will have Brighter integration code generated for it because it ends in "Command"
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SampleCommand : pb::IMessage<SampleCommand> {
    private static readonly pb::MessageParser<SampleCommand> _parser = new pb::MessageParser<SampleCommand>(() => new SampleCommand());
    public static pb::MessageParser<SampleCommand> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Brighter.Example.Messages.SampleCommandReflection.Descriptor.MessageTypes[0]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public SampleCommand() {
      OnConstruction();
    }

    partial void OnConstruction();

    public SampleCommand(SampleCommand other) : this() {
      commandParameter_ = other.commandParameter_;
      commandValue_ = other.commandValue_;
    }

    public SampleCommand Clone() {
      return new SampleCommand(this);
    }

    /// <summary>Field number for the "CommandParameter" field.</summary>
    public const int CommandParameterFieldNumber = 1;
    private string commandParameter_ = "";
    public string CommandParameter {
      get { return commandParameter_; }
      set {
        commandParameter_ = pb::Preconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CommandValue" field.</summary>
    public const int CommandValueFieldNumber = 2;
    private float commandValue_;
    public float CommandValue {
      get { return commandValue_; }
      set {
        commandValue_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as SampleCommand);
    }

    public bool Equals(SampleCommand other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CommandParameter != other.CommandParameter) return false;
      if (CommandValue != other.CommandValue) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (CommandParameter.Length != 0) hash ^= CommandParameter.GetHashCode();
      if (CommandValue != 0F) hash ^= CommandValue.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (CommandParameter.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CommandParameter);
      }
      if (CommandValue != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(CommandValue);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (CommandParameter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CommandParameter);
      }
      if (CommandValue != 0F) {
        size += 1 + 4;
      }
      return size;
    }

    public void MergeFrom(SampleCommand other) {
      if (other == null) {
        return;
      }
      if (other.CommandParameter.Length != 0) {
        CommandParameter = other.CommandParameter;
      }
      if (other.CommandValue != 0F) {
        CommandValue = other.CommandValue;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            CommandParameter = input.ReadString();
            break;
          }
          case 21: {
            CommandValue = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
